-- MySQL dump 10.13  Distrib 5.7.24, for Linux (x86_64)
--
-- Host: localhost    Database: qar
-- ------------------------------------------------------
-- Server version	5.7.24-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `answers`
--

DROP TABLE IF EXISTS `answers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `result_question_id` int(11) NOT NULL,
  `choice` char(3) NOT NULL,
  `justify` text,
  `start_time` time DEFAULT NULL,
  `end_time` time DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK` (`user_id`),
  KEY `fk_answers_result_questions1_idx` (`result_question_id`),
  CONSTRAINT `fk_answers_result_questions1` FOREIGN KEY (`result_question_id`) REFERENCES `result_questions` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_answers_users1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answers`
--

LOCK TABLES `answers` WRITE;
/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `language_search_events`
--

DROP TABLE IF EXISTS `language_search_events`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `language_search_events` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `language_id` tinyint(4) NOT NULL,
  `search_event_id` int(11) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_languages_has_search_events_search_events1_idx` (`search_event_id`),
  KEY `fk_languages_has_search_events_languages1_idx` (`language_id`),
  CONSTRAINT `fk_languages_has_search_events_languages1` FOREIGN KEY (`language_id`) REFERENCES `languages` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_languages_has_search_events_search_events1` FOREIGN KEY (`search_event_id`) REFERENCES `search_events` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `language_search_events`
--

LOCK TABLES `language_search_events` WRITE;
/*!40000 ALTER TABLE `language_search_events` DISABLE KEYS */;
INSERT INTO `language_search_events` VALUES (5,1,5,'2018-09-02 16:33:20');
/*!40000 ALTER TABLE `language_search_events` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `languages`
--

DROP TABLE IF EXISTS `languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `languages` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `description` varchar(25) NOT NULL,
  `brush` varchar(25) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `languages`
--

LOCK TABLES `languages` WRITE;
/*!40000 ALTER TABLE `languages` DISABLE KEYS */;
INSERT INTO `languages` VALUES (1,'Java','java','2018-02-14 11:10:20');
/*!40000 ALTER TABLE `languages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `metric_types`
--

DROP TABLE IF EXISTS `metric_types`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `metric_types` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `description` varchar(20) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `metric_types`
--

LOCK TABLES `metric_types` WRITE;
/*!40000 ALTER TABLE `metric_types` DISABLE KEYS */;
INSERT INTO `metric_types` VALUES (2,'Qualitativa','2018-02-14 11:10:22'),(3,'Quantitativa','2018-02-14 11:10:25');
/*!40000 ALTER TABLE `metric_types` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `metrics`
--

DROP TABLE IF EXISTS `metrics`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `metrics` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `metric_type_id` tinyint(4) NOT NULL,
  `acronym` varchar(10) NOT NULL,
  `description` text NOT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK` (`metric_type_id`),
  CONSTRAINT `fk_metrics_metric_types1` FOREIGN KEY (`metric_type_id`) REFERENCES `metric_types` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `metrics`
--

LOCK TABLES `metrics` WRITE;
/*!40000 ALTER TABLE `metrics` DISABLE KEYS */;
INSERT INTO `metrics` VALUES (1,3,'LOC','Linhas de código (linhas de código pertencentes aos métodos)','2018-02-14 11:10:25','2018-02-14 11:10:25'),(2,3,'ACCM','Complexidade ciclomática do método (quantidade de caminhos diferentes no método);','2018-02-14 11:10:25','2018-02-14 11:10:25'),(4,2,'LIKERT','Mede atitudes e comportamentos utilizando opções de resposta que variam de um extremo a outro.','2018-02-14 11:10:25','2018-02-14 11:10:25');
/*!40000 ALTER TABLE `metrics` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `participant_types`
--

DROP TABLE IF EXISTS `participant_types`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `participant_types` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `description` varchar(45) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `participant_types`
--

LOCK TABLES `participant_types` WRITE;
/*!40000 ALTER TABLE `participant_types` DISABLE KEYS */;
INSERT INTO `participant_types` VALUES (1,'Responsavel',NULL),(2,'Coordenador',NULL),(3,'Intrevistado',NULL),(4,'Cooperador',NULL);
/*!40000 ALTER TABLE `participant_types` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `participants`
--

DROP TABLE IF EXISTS `participants`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `participants` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `search_event_id` int(11) NOT NULL,
  `participant_type_id` tinyint(4) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_participants_search_events1_idx` (`search_event_id`),
  KEY `fk_participants_users1_idx` (`user_id`),
  KEY `fk_participants_participant_types1_idx` (`participant_type_id`),
  CONSTRAINT `fk_participants_participant_types1` FOREIGN KEY (`participant_type_id`) REFERENCES `participant_types` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_participants_search_events1` FOREIGN KEY (`search_event_id`) REFERENCES `search_events` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_participants_users1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `participants`
--

LOCK TABLES `participants` WRITE;
/*!40000 ALTER TABLE `participants` DISABLE KEYS */;
INSERT INTO `participants` VALUES (5,2,5,1,'2018-09-02 16:33:21'),(7,2,5,4,'2018-09-02 18:30:20'),(8,2,5,4,'2018-09-02 18:34:15'),(9,2,5,4,'2018-09-02 18:34:38'),(10,2,5,4,'2018-09-02 18:35:18'),(11,2,5,4,'2018-11-26 15:59:49'),(12,2,5,4,'2018-11-26 15:59:58'),(13,2,5,4,'2018-11-26 16:00:07'),(14,2,5,4,'2018-11-26 16:00:14'),(15,2,5,4,'2018-11-26 16:00:21'),(16,2,5,4,'2018-11-26 16:00:28');
/*!40000 ALTER TABLE `participants` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `question_types` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `description` varchar(25) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question_types`
--

LOCK TABLES `question_types` WRITE;
/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` VALUES (1,'Multipla Escolha','2018-02-14 11:10:25'),(2,'Descritiva','2018-02-14 11:10:25'),(3,'Numerica','2018-02-14 11:10:25');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `questions`
--

DROP TABLE IF EXISTS `questions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `participant_id` int(11) NOT NULL,
  `question_type_id` tinyint(4) NOT NULL,
  `description` text COLLATE utf8_czech_ci NOT NULL,
  `jumps` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_questions_question_types1_idx` (`question_type_id`),
  KEY `fk_questions_participants1_idx` (`participant_id`),
  CONSTRAINT `fk_questions_participants1` FOREIGN KEY (`participant_id`) REFERENCES `participants` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_questions_question_types1` FOREIGN KEY (`question_type_id`) REFERENCES `question_types` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COLLATE=utf8_czech_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `questions`
--

LOCK TABLES `questions` WRITE;
/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` VALUES (1,5,1,'Considerando essa transformação específica, a alteração de código corresponde a um refatoramento para a introdução de expressões lambda?',NULL,'2018-09-02 18:30:20','2018-09-02 18:30:20'),(2,7,1,'Considerando essa transformação específica, você concorda que a adoção de expressões lambda melhoram a legibilidade?',NULL,'2018-09-02 18:30:20','2018-09-02 18:30:20'),(3,8,1,'Considerando essa transformação específica, você concorda que é fácil compreender o propósito da transformação?',NULL,'2018-09-02 18:34:15','2018-09-02 18:34:15'),(4,9,1,'Considerando essa transformação específica, você concorda que ela deveria ser aplicada?',NULL,'2018-09-02 18:34:39','2018-09-02 18:34:39'),(5,10,1,'Considerando essa transformação específica, a redução da quantidade de branches (laços de repetição como for ou while e sentenças condicionais como if-then-else ou switch cases) é perceptível?',NULL,'2018-09-02 18:35:18','2018-09-02 18:35:18'),(6,11,1,'Considerando essa transformação específica, a redução da quantidade de linhas de código é relevante?',NULL,'2018-11-26 15:59:49','2018-11-26 15:59:49'),(7,12,1,'Você concorda que a transformação melhorou a flexibilidade (adequar às mudanças solicitadas na aplicação)?',NULL,'2018-11-26 15:59:58','2018-11-26 15:59:58'),(8,13,1,'Você concorda que a transformação aumentou as oportunidades de reuso (evitar retrabalho no desenvolvimento de código)?',NULL,'2018-11-26 16:00:07','2018-11-26 16:00:07'),(9,14,1,'Você concorda que a transformação melhorou o desempenho (comportamento de Tempo)?',NULL,'2018-11-26 16:00:14','2018-11-26 16:00:14'),(10,15,1,'Você concorda que a transformação melhorou a testabilidade (validação do software durante os testes)?',NULL,'2018-11-26 16:00:21','2018-11-26 16:00:21'),(11,16,1,'Você concorda que a transformação melhorou a analisabilidade (diagnóstico de deficiências ou causas de falhas no software)?',NULL,'2018-11-26 16:00:28','2018-11-26 16:00:28');
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `result_questions`
--

DROP TABLE IF EXISTS `result_questions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `result_questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `result_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_result_questions_questions1_idx` (`question_id`),
  KEY `fk_result_questions_results1_idx` (`result_id`),
  CONSTRAINT `fk_result_questions_questions1` FOREIGN KEY (`question_id`) REFERENCES `questions` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_result_questions_results1` FOREIGN KEY (`result_id`) REFERENCES `results` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1761 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `result_questions`
--

LOCK TABLES `result_questions` WRITE;
/*!40000 ALTER TABLE `result_questions` DISABLE KEYS */;
INSERT INTO `result_questions` VALUES (1618,2658,1,'2018-12-01 20:39:39'),(1619,2658,2,'2018-12-01 20:39:39'),(1620,2658,3,'2018-12-01 20:39:39'),(1621,2658,4,'2018-12-01 20:39:39'),(1622,2658,5,'2018-12-01 20:39:39'),(1623,2658,6,'2018-12-01 20:39:39'),(1624,2658,7,'2018-12-01 20:39:39'),(1625,2658,8,'2018-12-01 20:39:39'),(1626,2658,9,'2018-12-01 20:39:39'),(1627,2658,10,'2018-12-01 20:39:39'),(1628,2658,11,'2018-12-01 20:39:40'),(1629,2691,1,'2018-12-01 20:39:40'),(1630,2691,2,'2018-12-01 20:39:40'),(1631,2691,3,'2018-12-01 20:39:40'),(1632,2691,4,'2018-12-01 20:39:40'),(1633,2691,5,'2018-12-01 20:39:40'),(1634,2691,6,'2018-12-01 20:39:40'),(1635,2691,7,'2018-12-01 20:39:40'),(1636,2691,8,'2018-12-01 20:39:40'),(1637,2691,9,'2018-12-01 20:39:40'),(1638,2691,10,'2018-12-01 20:39:40'),(1639,2691,11,'2018-12-01 20:39:40'),(1640,2697,1,'2018-12-01 20:39:40'),(1641,2697,2,'2018-12-01 20:39:40'),(1642,2697,3,'2018-12-01 20:39:40'),(1643,2697,4,'2018-12-01 20:39:40'),(1644,2697,5,'2018-12-01 20:39:40'),(1645,2697,6,'2018-12-01 20:39:40'),(1646,2697,7,'2018-12-01 20:39:40'),(1647,2697,8,'2018-12-01 20:39:40'),(1648,2697,9,'2018-12-01 20:39:40'),(1649,2697,10,'2018-12-01 20:39:40'),(1650,2697,11,'2018-12-01 20:39:41'),(1651,2718,1,'2018-12-01 20:39:41'),(1652,2718,2,'2018-12-01 20:39:41'),(1653,2718,3,'2018-12-01 20:39:41'),(1654,2718,4,'2018-12-01 20:39:41'),(1655,2718,5,'2018-12-01 20:39:41'),(1656,2718,6,'2018-12-01 20:39:41'),(1657,2718,7,'2018-12-01 20:39:41'),(1658,2718,8,'2018-12-01 20:39:41'),(1659,2718,9,'2018-12-01 20:39:41'),(1660,2718,10,'2018-12-01 20:39:41'),(1661,2718,11,'2018-12-01 20:39:41'),(1662,2727,1,'2018-12-01 20:39:41'),(1663,2727,2,'2018-12-01 20:39:41'),(1664,2727,3,'2018-12-01 20:39:41'),(1665,2727,4,'2018-12-01 20:39:41'),(1666,2727,5,'2018-12-01 20:39:41'),(1667,2727,6,'2018-12-01 20:39:41'),(1668,2727,7,'2018-12-01 20:39:41'),(1669,2727,8,'2018-12-01 20:39:41'),(1670,2727,9,'2018-12-01 20:39:41'),(1671,2727,10,'2018-12-01 20:39:42'),(1672,2727,11,'2018-12-01 20:39:42'),(1673,2730,1,'2018-12-01 20:39:42'),(1674,2730,2,'2018-12-01 20:39:42'),(1675,2730,3,'2018-12-01 20:39:42'),(1676,2730,4,'2018-12-01 20:39:42'),(1677,2730,5,'2018-12-01 20:39:42'),(1678,2730,6,'2018-12-01 20:39:42'),(1679,2730,7,'2018-12-01 20:39:42'),(1680,2730,8,'2018-12-01 20:39:42'),(1681,2730,9,'2018-12-01 20:39:42'),(1682,2730,10,'2018-12-01 20:39:42'),(1683,2730,11,'2018-12-01 20:39:42'),(1684,2733,1,'2018-12-01 20:39:42'),(1685,2733,2,'2018-12-01 20:39:42'),(1686,2733,3,'2018-12-01 20:39:42'),(1687,2733,4,'2018-12-01 20:39:42'),(1688,2733,5,'2018-12-01 20:39:42'),(1689,2733,6,'2018-12-01 20:39:42'),(1690,2733,7,'2018-12-01 20:39:42'),(1691,2733,8,'2018-12-01 20:39:43'),(1692,2733,9,'2018-12-01 20:39:43'),(1693,2733,10,'2018-12-01 20:39:43'),(1694,2733,11,'2018-12-01 20:39:43'),(1695,2751,1,'2018-12-01 20:39:43'),(1696,2751,2,'2018-12-01 20:39:43'),(1697,2751,3,'2018-12-01 20:39:43'),(1698,2751,4,'2018-12-01 20:39:43'),(1699,2751,5,'2018-12-01 20:39:43'),(1700,2751,6,'2018-12-01 20:39:43'),(1701,2751,7,'2018-12-01 20:39:43'),(1702,2751,8,'2018-12-01 20:39:43'),(1703,2751,9,'2018-12-01 20:39:43'),(1704,2751,10,'2018-12-01 20:39:44'),(1705,2751,11,'2018-12-01 20:39:44'),(1706,2757,1,'2018-12-01 20:39:44'),(1707,2757,2,'2018-12-01 20:39:44'),(1708,2757,3,'2018-12-01 20:39:44'),(1709,2757,4,'2018-12-01 20:39:44'),(1710,2757,5,'2018-12-01 20:39:44'),(1711,2757,6,'2018-12-01 20:39:44'),(1712,2757,7,'2018-12-01 20:39:44'),(1713,2757,8,'2018-12-01 20:39:44'),(1714,2757,9,'2018-12-01 20:39:44'),(1715,2757,10,'2018-12-01 20:39:44'),(1716,2757,11,'2018-12-01 20:39:44'),(1717,2760,1,'2018-12-01 20:39:44'),(1718,2760,2,'2018-12-01 20:39:44'),(1719,2760,3,'2018-12-01 20:39:44'),(1720,2760,4,'2018-12-01 20:39:44'),(1721,2760,5,'2018-12-01 20:39:44'),(1722,2760,6,'2018-12-01 20:39:44'),(1723,2760,7,'2018-12-01 20:39:44'),(1724,2760,8,'2018-12-01 20:39:45'),(1725,2760,9,'2018-12-01 20:39:45'),(1726,2760,10,'2018-12-01 20:39:45'),(1727,2760,11,'2018-12-01 20:39:45'),(1728,2763,1,'2018-12-01 20:39:45'),(1729,2763,2,'2018-12-01 20:39:45'),(1730,2763,3,'2018-12-01 20:39:45'),(1731,2763,4,'2018-12-01 20:39:45'),(1732,2763,5,'2018-12-01 20:39:45'),(1733,2763,6,'2018-12-01 20:39:45'),(1734,2763,7,'2018-12-01 20:39:45'),(1735,2763,8,'2018-12-01 20:39:45'),(1736,2763,9,'2018-12-01 20:39:45'),(1737,2763,10,'2018-12-01 20:39:45'),(1738,2763,11,'2018-12-01 20:39:45'),(1739,2778,1,'2018-12-01 20:39:45'),(1740,2778,2,'2018-12-01 20:39:45'),(1741,2778,3,'2018-12-01 20:39:45'),(1742,2778,4,'2018-12-01 20:39:45'),(1743,2778,5,'2018-12-01 20:39:45'),(1744,2778,6,'2018-12-01 20:39:45'),(1745,2778,7,'2018-12-01 20:39:45'),(1746,2778,8,'2018-12-01 20:39:46'),(1747,2778,9,'2018-12-01 20:39:46'),(1748,2778,10,'2018-12-01 20:39:46'),(1749,2778,11,'2018-12-01 20:39:46'),(1750,2790,1,'2018-12-01 20:39:46'),(1751,2790,2,'2018-12-01 20:39:46'),(1752,2790,3,'2018-12-01 20:39:46'),(1753,2790,4,'2018-12-01 20:39:46'),(1754,2790,5,'2018-12-01 20:39:46'),(1755,2790,6,'2018-12-01 20:39:46'),(1756,2790,7,'2018-12-01 20:39:46'),(1757,2790,8,'2018-12-01 20:39:46'),(1758,2790,9,'2018-12-01 20:39:46'),(1759,2790,10,'2018-12-01 20:39:46'),(1760,2790,11,'2018-12-01 20:39:46');
/*!40000 ALTER TABLE `result_questions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `results`
--

DROP TABLE IF EXISTS `results`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `results` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `transformation_id` int(11) NOT NULL,
  `metric_id` int(11) NOT NULL,
  `before` int(11) DEFAULT NULL,
  `after` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK` (`transformation_id`,`metric_id`),
  KEY `fk_results_metrics1_idx` (`metric_id`),
  CONSTRAINT `fk_results_metrics1` FOREIGN KEY (`metric_id`) REFERENCES `metrics` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_results_transformations1` FOREIGN KEY (`transformation_id`) REFERENCES `transformations` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2848 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `results`
--

LOCK TABLES `results` WRITE;
/*!40000 ALTER TABLE `results` DISABLE KEYS */;
INSERT INTO `results` VALUES (2650,893,1,4,4,'2018-12-01 17:40:55'),(2651,893,2,1,1,'2018-12-01 17:40:55'),(2652,893,4,NULL,NULL,'2018-12-01 17:40:55'),(2653,894,1,12,8,'2018-12-01 17:40:57'),(2654,894,2,3,1,'2018-12-01 17:40:57'),(2655,894,4,NULL,NULL,'2018-12-01 17:40:57'),(2656,895,1,4,4,'2018-12-01 17:41:00'),(2657,895,2,1,1,'2018-12-01 17:41:00'),(2658,895,4,NULL,NULL,'2018-12-01 17:41:00'),(2659,896,1,6,4,'2018-12-01 17:41:03'),(2660,896,2,1,1,'2018-12-01 17:41:03'),(2661,896,4,NULL,NULL,'2018-12-01 17:41:03'),(2662,897,1,10,6,'2018-12-01 17:41:04'),(2663,897,2,2,1,'2018-12-01 17:41:04'),(2664,897,4,NULL,NULL,'2018-12-01 17:41:04'),(2665,898,1,8,4,'2018-12-01 17:41:06'),(2666,898,2,1,1,'2018-12-01 17:41:06'),(2667,898,4,NULL,NULL,'2018-12-01 17:41:06'),(2668,899,1,20,21,'2018-12-01 17:41:10'),(2669,899,2,3,3,'2018-12-01 17:41:10'),(2670,899,4,NULL,NULL,'2018-12-01 17:41:10'),(2671,900,1,11,28,'2018-12-01 17:41:12'),(2672,900,2,2,7,'2018-12-01 17:41:12'),(2673,900,4,NULL,NULL,'2018-12-01 17:41:12'),(2674,901,1,12,7,'2018-12-01 17:41:14'),(2675,901,2,1,1,'2018-12-01 17:41:14'),(2676,901,4,NULL,NULL,'2018-12-01 17:41:14'),(2677,902,1,14,8,'2018-12-01 17:41:15'),(2678,902,2,1,1,'2018-12-01 17:41:15'),(2679,902,4,NULL,NULL,'2018-12-01 17:41:15'),(2680,903,1,5,10,'2018-12-01 17:41:17'),(2681,903,2,2,3,'2018-12-01 17:41:17'),(2682,903,4,NULL,NULL,'2018-12-01 17:41:17'),(2683,904,1,6,11,'2018-12-01 17:41:19'),(2684,904,2,2,3,'2018-12-01 17:41:19'),(2685,904,4,NULL,NULL,'2018-12-01 17:41:19'),(2686,905,1,9,6,'2018-12-01 17:41:21'),(2687,905,2,2,2,'2018-12-01 17:41:21'),(2688,905,4,NULL,NULL,'2018-12-01 17:41:21'),(2689,906,1,13,11,'2018-12-01 17:41:23'),(2690,906,2,3,3,'2018-12-01 17:41:23'),(2691,906,4,NULL,NULL,'2018-12-01 17:41:23'),(2692,907,1,16,14,'2018-12-01 17:41:25'),(2693,907,2,3,2,'2018-12-01 17:41:25'),(2694,907,4,NULL,NULL,'2018-12-01 17:41:25'),(2695,908,1,11,42,'2018-12-01 17:41:27'),(2696,908,2,2,4,'2018-12-01 17:41:27'),(2697,908,4,NULL,NULL,'2018-12-01 17:41:27'),(2698,909,1,3,7,'2018-12-01 17:41:29'),(2699,909,2,1,1,'2018-12-01 17:41:29'),(2700,909,4,NULL,NULL,'2018-12-01 17:41:29'),(2701,910,1,7,15,'2018-12-01 17:41:31'),(2702,910,2,1,2,'2018-12-01 17:41:31'),(2703,910,4,NULL,NULL,'2018-12-01 17:41:31'),(2704,911,1,6,7,'2018-12-01 17:41:33'),(2705,911,2,1,1,'2018-12-01 17:41:33'),(2706,911,4,NULL,NULL,'2018-12-01 17:41:33'),(2707,912,1,6,7,'2018-12-01 17:41:35'),(2708,912,2,1,1,'2018-12-01 17:41:35'),(2709,912,4,NULL,NULL,'2018-12-01 17:41:35'),(2710,913,1,11,4,'2018-12-01 17:41:38'),(2711,913,2,1,1,'2018-12-01 17:41:38'),(2712,913,4,NULL,NULL,'2018-12-01 17:41:38'),(2713,914,1,18,12,'2018-12-01 17:41:40'),(2714,914,2,1,1,'2018-12-01 17:41:40'),(2715,914,4,NULL,NULL,'2018-12-01 17:41:40'),(2716,915,1,13,12,'2018-12-01 17:41:42'),(2717,915,2,3,4,'2018-12-01 17:41:42'),(2718,915,4,NULL,NULL,'2018-12-01 17:41:42'),(2719,916,1,14,8,'2018-12-01 17:41:44'),(2720,916,2,1,1,'2018-12-01 17:41:44'),(2721,916,4,NULL,NULL,'2018-12-01 17:41:44'),(2722,917,1,3,5,'2018-12-01 17:41:46'),(2723,917,2,1,1,'2018-12-01 17:41:46'),(2724,917,4,NULL,NULL,'2018-12-01 17:41:46'),(2725,918,1,11,5,'2018-12-01 17:41:47'),(2726,918,2,5,2,'2018-12-01 17:41:48'),(2727,918,4,NULL,NULL,'2018-12-01 17:41:48'),(2728,919,1,11,20,'2018-12-01 17:41:50'),(2729,919,2,2,4,'2018-12-01 17:41:50'),(2730,919,4,NULL,NULL,'2018-12-01 17:41:50'),(2731,920,1,7,9,'2018-12-01 17:41:52'),(2732,920,2,4,3,'2018-12-01 17:41:52'),(2733,920,4,NULL,NULL,'2018-12-01 17:41:52'),(2734,921,1,19,14,'2018-12-01 17:41:54'),(2735,921,2,2,2,'2018-12-01 17:41:54'),(2736,921,4,NULL,NULL,'2018-12-01 17:41:54'),(2737,922,1,14,9,'2018-12-01 17:41:56'),(2738,922,2,2,2,'2018-12-01 17:41:56'),(2739,922,4,NULL,NULL,'2018-12-01 17:41:56'),(2740,923,1,17,10,'2018-12-01 17:41:58'),(2741,923,2,1,1,'2018-12-01 17:41:58'),(2742,923,4,NULL,NULL,'2018-12-01 17:41:58'),(2743,924,1,6,10,'2018-12-01 17:42:00'),(2744,924,2,1,1,'2018-12-01 17:42:00'),(2745,924,4,NULL,NULL,'2018-12-01 17:42:00'),(2746,925,1,16,7,'2018-12-01 17:42:02'),(2747,925,2,6,6,'2018-12-01 17:42:02'),(2748,925,4,NULL,NULL,'2018-12-01 17:42:02'),(2749,926,1,7,7,'2018-12-01 17:42:04'),(2750,926,2,1,1,'2018-12-01 17:42:04'),(2751,926,4,NULL,NULL,'2018-12-01 17:42:04'),(2752,927,1,8,6,'2018-12-01 17:42:06'),(2753,927,2,3,3,'2018-12-01 17:42:06'),(2754,927,4,NULL,NULL,'2018-12-01 17:42:06'),(2755,928,1,-2,-2,'2018-12-01 17:42:09'),(2756,928,2,2,2,'2018-12-01 17:42:09'),(2757,928,4,NULL,NULL,'2018-12-01 17:42:09'),(2758,929,1,9,3,'2018-12-01 17:42:17'),(2759,929,2,3,1,'2018-12-01 17:42:17'),(2760,929,4,NULL,NULL,'2018-12-01 17:42:17'),(2761,930,1,10,4,'2018-12-01 17:42:19'),(2762,930,2,3,1,'2018-12-01 17:42:19'),(2763,930,4,NULL,NULL,'2018-12-01 17:42:19'),(2764,931,1,8,11,'2018-12-01 17:42:21'),(2765,931,2,2,2,'2018-12-01 17:42:21'),(2766,931,4,NULL,NULL,'2018-12-01 17:42:21'),(2767,932,1,8,5,'2018-12-01 17:42:22'),(2768,932,2,1,1,'2018-12-01 17:42:22'),(2769,932,4,NULL,NULL,'2018-12-01 17:42:22'),(2770,933,1,33,15,'2018-12-01 17:42:24'),(2771,933,2,1,1,'2018-12-01 17:42:24'),(2772,933,4,NULL,NULL,'2018-12-01 17:42:24'),(2773,934,1,12,8,'2018-12-01 17:42:26'),(2774,934,2,1,1,'2018-12-01 17:42:26'),(2775,934,4,NULL,NULL,'2018-12-01 17:42:27'),(2776,935,1,22,11,'2018-12-01 17:42:28'),(2777,935,2,1,1,'2018-12-01 17:42:28'),(2778,935,4,NULL,NULL,'2018-12-01 17:42:29'),(2779,936,1,9,6,'2018-12-01 17:42:31'),(2780,936,2,2,2,'2018-12-01 17:42:31'),(2781,936,4,NULL,NULL,'2018-12-01 17:42:31'),(2782,937,1,7,6,'2018-12-01 17:42:33'),(2783,937,2,1,1,'2018-12-01 17:42:33'),(2784,937,4,NULL,NULL,'2018-12-01 17:42:33'),(2785,938,1,7,11,'2018-12-01 17:42:35'),(2786,938,2,3,3,'2018-12-01 17:42:35'),(2787,938,4,NULL,NULL,'2018-12-01 17:42:35'),(2788,939,1,5,5,'2018-12-01 17:42:36'),(2789,939,2,2,2,'2018-12-01 17:42:37'),(2790,939,4,NULL,NULL,'2018-12-01 17:42:37'),(2791,940,1,13,18,'2018-12-01 17:42:39'),(2792,940,2,1,1,'2018-12-01 17:42:39'),(2793,940,4,NULL,NULL,'2018-12-01 17:42:39'),(2794,941,1,4,5,'2018-12-01 17:42:41'),(2795,941,2,1,2,'2018-12-01 17:42:41'),(2796,941,4,NULL,NULL,'2018-12-01 17:42:41'),(2797,942,1,15,15,'2018-12-01 17:42:46'),(2798,942,2,5,5,'2018-12-01 17:42:46'),(2799,942,4,NULL,NULL,'2018-12-01 17:42:46'),(2800,943,1,9,2,'2018-12-01 17:42:48'),(2801,943,2,1,1,'2018-12-01 17:42:48'),(2802,943,4,NULL,NULL,'2018-12-01 17:42:48'),(2803,944,1,19,17,'2018-12-01 17:42:50'),(2804,944,2,3,3,'2018-12-01 17:42:50'),(2805,944,4,NULL,NULL,'2018-12-01 17:42:50'),(2806,945,1,14,15,'2018-12-01 17:42:52'),(2807,945,2,1,1,'2018-12-01 17:42:52'),(2808,945,4,NULL,NULL,'2018-12-01 17:42:52'),(2809,946,1,7,6,'2018-12-01 17:42:53'),(2810,946,2,1,1,'2018-12-01 17:42:53'),(2811,946,4,NULL,NULL,'2018-12-01 17:42:53'),(2812,947,1,5,4,'2018-12-01 17:42:55'),(2813,947,2,1,1,'2018-12-01 17:42:55'),(2814,947,4,NULL,NULL,'2018-12-01 17:42:55'),(2815,948,1,9,10,'2018-12-01 17:42:59'),(2816,948,2,1,1,'2018-12-01 17:43:00'),(2817,948,4,NULL,NULL,'2018-12-01 17:43:00'),(2821,950,1,7,2,'2018-12-01 17:43:13'),(2822,950,2,1,1,'2018-12-01 17:43:13'),(2823,950,4,NULL,NULL,'2018-12-01 17:43:13'),(2824,951,1,7,4,'2018-12-01 17:43:18'),(2825,951,2,1,1,'2018-12-01 17:43:18'),(2826,951,4,NULL,NULL,'2018-12-01 17:43:18'),(2827,952,1,8,4,'2018-12-01 17:43:20'),(2828,952,2,1,1,'2018-12-01 17:43:20'),(2829,952,4,NULL,NULL,'2018-12-01 17:43:20'),(2830,953,1,14,11,'2018-12-01 17:43:22'),(2831,953,2,3,3,'2018-12-01 17:43:22'),(2832,953,4,NULL,NULL,'2018-12-01 17:43:22');
/*!40000 ALTER TABLE `results` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `search_events`
--

DROP TABLE IF EXISTS `search_events`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `search_events` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(150) NOT NULL,
  `school` varchar(100) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `search_events`
--

LOCK TABLES `search_events` WRITE;
/*!40000 ALTER TABLE `search_events` DISABLE KEYS */;
INSERT INTO `search_events` VALUES (5,'Impacto de refatorações de código com expressões lambda sobre a legibilidade: Uma análise experimental','Universidade de Brasília','2018-09-02 16:33:20','2018-09-02 16:33:20');
/*!40000 ALTER TABLE `search_events` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `transformation_type_languages`
--

DROP TABLE IF EXISTS `transformation_type_languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `transformation_type_languages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `language_id` tinyint(4) NOT NULL,
  `transformation_type_id` tinyint(4) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_transformation_type_languages_languages1_idx` (`language_id`),
  KEY `fk_transformation_type_languages_transformation_types1_idx` (`transformation_type_id`),
  CONSTRAINT `fk_transformation_type_languages_languages1` FOREIGN KEY (`language_id`) REFERENCES `languages` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_transformation_type_languages_transformation_types1` FOREIGN KEY (`transformation_type_id`) REFERENCES `transformation_types` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `transformation_type_languages`
--

LOCK TABLES `transformation_type_languages` WRITE;
/*!40000 ALTER TABLE `transformation_type_languages` DISABLE KEYS */;
/*!40000 ALTER TABLE `transformation_type_languages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `transformation_types`
--

DROP TABLE IF EXISTS `transformation_types`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `transformation_types` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `description` varchar(120) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `transformation_types`
--

LOCK TABLES `transformation_types` WRITE;
/*!40000 ALTER TABLE `transformation_types` DISABLE KEYS */;
INSERT INTO `transformation_types` VALUES (1,'Anonymous inner classes -> Lambda','2018-02-14 11:10:25'),(2,'(for) to ForEach -> Lambda','2018-02-14 11:10:25'),(3,'(for) to Filter -> Lambda','2018-02-14 11:10:25'),(4,'(If) to anyMatch -> Lambda','2018-02-14 11:10:25'),(5,'(for) to Map -> Lambda','2018-02-14 11:10:25'),(6,'(for) to Map/Reduce -> Lambda','2018-11-29 15:50:25'),(7,'(for) to Map/Collect  -> Lambda','2018-11-29 15:50:25'),(8,'(for) to Filter/Count -> Lambda','2018-11-29 15:50:25'),(9,'(for) to Filter/Collect -> Lambda','2018-11-29 15:50:25'),(10,'(for) to Filter/ForEach -> Lambda','2018-11-30 12:50:25'),(11,'(for) to Filter/FlatMap -> Lambda','2018-01-12 12:50:25'),(13,'(for) to Map/FlatMap -> Lambda','2018-01-12 12:50:25'),(14,'(for) to ForEach/FlatMap -> Lambda','2018-01-12 12:50:25'),(15,'(for) to Map/Count -> Lambda','2018-01-12 12:50:25'),(16,'(for) to FlatMap -> Lambda','2018-01-12 12:50:25');
/*!40000 ALTER TABLE `transformation_types` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `transformations`
--

DROP TABLE IF EXISTS `transformations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `transformations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `transformation_type_id` tinyint(4) NOT NULL,
  `language_id` tinyint(4) NOT NULL,
  `search_event_id` int(11) NOT NULL,
  `code_before` text,
  `deletions` varchar(50) DEFAULT NULL,
  `code_after` text,
  `additions` varchar(50) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `diff_id` text NOT NULL,
  `site_link` text NOT NULL,
  `old_code` varchar(255) DEFAULT NULL,
  `new_code` varchar(255) DEFAULT NULL,
  `line_start` varchar(45) DEFAULT NULL,
  `line_end` varchar(45) DEFAULT NULL,
  `apt` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_transformations_languages1_idx` (`language_id`),
  KEY `fk_transformations_transformation_types1_idx` (`transformation_type_id`),
  KEY `fk_transformations_search_events1_idx` (`search_event_id`),
  CONSTRAINT `fk_transformations_languages1` FOREIGN KEY (`language_id`) REFERENCES `languages` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_transformations_search_events1` FOREIGN KEY (`search_event_id`) REFERENCES `search_events` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_transformations_transformation_types1` FOREIGN KEY (`transformation_type_id`) REFERENCES `transformation_types` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=959 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `transformations`
--

LOCK TABLES `transformations` WRITE;
/*!40000 ALTER TABLE `transformations` DISABLE KEYS */;
INSERT INTO `transformations` VALUES (893,1,1,5,'<p>\r\n<br/>    	@Override\r\n<br/>    -	public boolean supportsParameter(MethodParameter parameter) {\r\n<br/>    -		return parameter.hasParameterAnnotation(Value.class);\r\n<br/>    	}\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>    	@Override\r\n<br/>    +	public boolean supportsParameter(MethodParameter param) {\r\n<br/>    +		return checkAnnotatedParamNoReactiveWrapper(param, Value.class, (annot, type) -&gt; true);\r\n<br/>    	}\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:40:55','2018-12-01 17:40:55','diff-82984a3951d9fc77df2cd9d6421dc5d6-20181201174055','https://github.com/spring-projects/spring-framework/commit/164204ca04b9b369267ef5e36c2f243b3898bae1#diff-82984a3951d9fc77df2cd9d6421dc5d6','/var/www/QARefactorings/app/webroot/files/diff-82984a3951d9fc77df2cd9d6421dc5d6-20181201174055/a.txt','/var/www/QARefactorings/app/webroot/files/diff-82984a3951d9fc77df2cd9d6421dc5d6-20181201174055/b.txt','L49','R57','S'),(894,7,1,5,'<p>\r\n<br/>        public ListField(String name, String humanName, List&lt;String&gt; defaultValue, Map&lt;String, String&gt; values, String description, Optional isOptional, Attribute... attributes) {\r\n<br/>            super(FIELD_TYPE, name, humanName, description, isOptional);\r\n<br/>            this.defaultValue = defaultValue;\r\n<br/>            this.values = values;\r\n<br/>    -\r\n<br/>    -        this.attributes = new ArrayList&lt;&gt;();\r\n<br/>    -        if (attributes != null) {\r\n<br/>    -            for (Attribute attribute : attributes) {\r\n<br/>    -                this.attributes.add(attribute.toString().toLowerCase(Locale.ENGLISH));\r\n<br/>    -            }\r\n<br/>    -        }\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        public ListField(String name, String humanName, List&lt;String&gt; defaultValue, Map&lt;String, String&gt; values, String description, Optional isOptional, Attribute... attributes) {\r\n<br/>            super(FIELD_TYPE, name, humanName, description, isOptional);\r\n<br/>            this.defaultValue = defaultValue;\r\n<br/>            this.values = values;\r\n<br/>    +        this.attributes = Arrays.stream(attributes)\r\n<br/>    +                .map(attribute -&gt; attribute.toString().toLowerCase(Locale.ENGLISH))\r\n<br/>    +                .collect(Collectors.toList());\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:40:57','2018-12-01 17:40:57','diff-d663fea3b2dce1447b9948bc83ad3683-20181201174057','https://github.com/Graylog2/graylog2-server/commit/50f59c0f17786f1ac180037728e4c8486ef873ae#diff-d663fea3b2dce1447b9948bc83ad3683','/var/www/QARefactorings/app/webroot/files/diff-d663fea3b2dce1447b9948bc83ad3683-20181201174057/a.txt','/var/www/QARefactorings/app/webroot/files/diff-d663fea3b2dce1447b9948bc83ad3683-20181201174057/b.txt','L46','R49','S'),(895,1,1,5,'<p>\r\n<br/>        @Override\r\n<br/>    -    public void put(K k, V v, long timeout, Handler&lt;AsyncResult&lt;Void&gt;&gt; completionHandler) {\r\n<br/>    -      put(k, v, timeout).setHandler(completionHandler);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>    +    public void replace(K k, V v, Handler&lt;AsyncResult&lt;V&gt;&gt; resultHandler) {\r\n<br/>    +      vertx.executeBlocking(fut -&gt; fut.complete(map.replace(k, v)), resultHandler);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:00','2018-12-01 17:41:00','diff-e31e546766580703e5b536a7c2368ec7-20181201174100','https://github.com/eclipse/vert.x/commit/824a1daa941ff04e087b4cc0774ee0b974cda266#diff-e31e546766580703e5b536a7c2368ec7','/var/www/QARefactorings/app/webroot/files/diff-e31e546766580703e5b536a7c2368ec7-20181201174100/a.txt','/var/www/QARefactorings/app/webroot/files/diff-e31e546766580703e5b536a7c2368ec7-20181201174100/b.txt','L277','R289','S'),(896,1,1,5,'<p>\r\n<br/>        @Override\r\n<br/>    -    public Future&lt;Void&gt; put(K k, V v, long timeout) {\r\n<br/>    -      Future&lt;Void&gt; fut = put(k, v);\r\n<br/>    -      vertx.setTimer(timeout, tid -&gt; map.remove(k));\r\n<br/>    -      return fut;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>    +    public void replaceIfPresent(K k, V oldValue, V newValue, Handler&lt;AsyncResult&lt;Boolean&gt;&gt; resultHandler) {\r\n<br/>    +      vertx.executeBlocking(fut -&gt; fut.complete(map.replace(k, oldValue, newValue)), resultHandler);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:03','2018-12-01 17:41:03','diff-e31e546766580703e5b536a7c2368ec7-20181201174103','https://github.com/eclipse/vert.x/commit/60ecfee015e51c61c6b0a452bcad68b72b1e1486#diff-e31e546766580703e5b536a7c2368ec7','/var/www/QARefactorings/app/webroot/files/diff-e31e546766580703e5b536a7c2368ec7-20181201174103/a.txt','/var/www/QARefactorings/app/webroot/files/diff-e31e546766580703e5b536a7c2368ec7-20181201174103/b.txt','L282','R294','N'),(897,7,1,5,'<p>\r\n<br/>        private static Collection&lt;CharSequenceJavaFileObject&gt; wrap(final Map&lt;String, CharSequence&gt; sources)\r\n<br/>        {\r\n<br/>    -        final Collection&lt;CharSequenceJavaFileObject&gt; collection = new ArrayList&lt;&gt;(sources.size());\r\n<br/>    -        for (final Map.Entry&lt;String, CharSequence&gt; entry : sources.entrySet())\r\n<br/>    -        {\r\n<br/>    -            collection.add(new CharSequenceJavaFileObject(entry.getKey(), entry.getValue()));\r\n<br/>    -        }\r\n<br/>    -\r\n<br/>    -        return collection;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        private static Collection&lt;CharSequenceJavaFileObject&gt; wrap(final Map&lt;String, CharSequence&gt; sources)\r\n<br/>        {\r\n<br/>    +        return sources.entrySet()\r\n<br/>    +            .stream()\r\n<br/>    +            .map((e) -&gt; new CharSequenceJavaFileObject(e.getKey(), e.getValue())).collect(toList());\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:04','2018-12-01 17:41:05','diff-37b7ff89b52726a431d8fc73423ffd79-20181201174104','https://github.com/real-logic/Agrona/commit/394dee1cb09b2c06b4ff887bfe7fcb813862fb3c#diff-37b7ff89b52726a431d8fc73423ffd79','/var/www/QARefactorings/app/webroot/files/diff-37b7ff89b52726a431d8fc73423ffd79-20181201174104/a.txt','/var/www/QARefactorings/app/webroot/files/diff-37b7ff89b52726a431d8fc73423ffd79-20181201174104/b.txt','L166','R176','S'),(898,7,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public List&lt;String&gt; attributes(final String attribute) {\r\n<br/>    -        return Lists.transform(this, new Function&lt;E, String&gt;() {\r\n<br/>    -            public String apply(E webElement) {\r\n<br/>    -                return webElement.attribute(attribute);\r\n<br/>    -            }\r\n<br/>    -        });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public List&lt;String&gt; attributes(final String attribute) {\r\n<br/>    +        return stream().map(webElement -&gt; webElement.attribute(attribute)).collect(Collectors.toList());\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:06','2018-12-01 17:41:07','diff-b8d56c1e212b1e2b113c91aeb2c19cd8-20181201174106','https://github.com/FluentLenium/FluentLenium/commit/73bac61cc819c5f04d8acac29575877e18de3332#diff-b8d56c1e212b1e2b113c91aeb2c19cd8','/var/www/QARefactorings/app/webroot/files/diff-b8d56c1e212b1e2b113c91aeb2c19cd8-20181201174106/a.txt','/var/www/QARefactorings/app/webroot/files/diff-b8d56c1e212b1e2b113c91aeb2c19cd8-20181201174106/b.txt','L417','R421','S'),(899,1,1,5,'<p><br>                @Override\r\n<br>                public void onFailure(Exception t) {\r\n<br>                    logger.warn((Supplier) () -&gt; new ParameterizedMessage(\"Failed to clear scroll [{}]\", scrollId), t);\r\n<br>                public void onFailure(Exception e) {\r\n<br>                    logFailure(e);\r\n<br>                    onCompletion.run();\r\n<br>                }\r\n<br>                private void logFailure(Exception e) {\r\n<br>                    if (e instanceof ResponseException) {\r\n<br>                        ResponseException re = (ResponseException) e;\r\n<br>                        if (remoteVersion.before(Version.V_2_0_0) &amp;&amp; re.getResponse().getStatusLine().getStatusCode() == 404) {\r\n<br>                            logger.debug((Supplier) () -&gt; new ParameterizedMessage(\r\n<br>                                    \"Failed to clear scroll [{}] from pre-2.0 Elasticsearch. This is normal if the request terminated \"\r\n<br>                            return;\r\n<br>                        }\r\n<br>                    }\r\n<br>                    logger.warn((Supplier) () -&gt; new ParameterizedMessage(\"Failed to clear scroll [{}]\", scrollId), e);\r\n<br>                }\r\n<br>            });\r\n<br>        }\r\n<br>    <br></p>',NULL,'<p><br>                @Override\r\n<br>                public void onFailure(Exception t) {\r\n<br>                    logger.warn((Supplier) () -&gt; new ParameterizedMessage(\"Failed to clear scroll [{}]\", scrollId), t);\r\n<br>                public void onFailure(Exception e) {\r\n<br>                    logFailure(e);\r\n<br>                    onCompletion.run();\r\n<br>                }\r\n<br>                private void logFailure(Exception e) {\r\n<br>                    if (e instanceof ResponseException) {\r\n<br>                        ResponseException re = (ResponseException) e;\r\n<br>                        if (remoteVersion.before(Version.V_2_0_0) &amp;&amp; re.getResponse().getStatusLine().getStatusCode() == 404) {\r\n<br>                            logger.debug((Supplier) () -&gt; new ParameterizedMessage(\r\n<br>                                    \"Failed to clear scroll [{}] from pre-2.0 Elasticsearch. This is normal if the request terminated \"\r\n<br>                                            + \"normally as the scroll has already been cleared automatically.\", scrollId), e);\r\n<br>                            return;\r\n<br>                        }\r\n<br>                    }\r\n<br>                    logger.warn((Supplier) () -&gt; new ParameterizedMessage(\"Failed to clear scroll [{}]\", scrollId), e);\r\n<br>                }\r\n<br>            });\r\n<br>        }\r\n<br>    <br></p>',NULL,'2018-12-01 17:41:10','2018-12-01 19:49:01','diff-10be32893f947fec2c278044519a4d21-20181201174110','https://github.com/elastic/elasticsearch/commit/d479b0e7c722569d99bbe30f70c2ac2a7b8fb597#diff-10be32893f947fec2c278044519a4d21','/var/www/QARefactorings/app/webroot/files/diff-10be32893f947fec2c278044519a4d21-20181201174110/a.txt','/var/www/QARefactorings/app/webroot/files/diff-10be32893f947fec2c278044519a4d21-20181201174110/b.txt','L120','R141','N'),(900,1,1,5,'<p><br>    -    /** ensure a cluster is form with {@link #nodes}.size() nodes, but do so by using the client of the specified node */\r\n<br>        private void validateClusterFormed(String viaNode) {\r\n<br>    -        final int size = nodes.size();\r\n<br>    -        logger.trace(\"validating cluster formed via [{}], expecting [{}]\", viaNode, size);\r\n<br>            final Client client = client(viaNode);\r\n<br>    -        ClusterHealthResponse response = client.admin().cluster().prepareHealth().setWaitForNodes(Integer.toString(size)).get();\r\n<br>    -        if (response.isTimedOut()) {\r\n<br>    -            logger.warn(\"failed to wait for a cluster of size [{}], got [{}]\", size, response);\r\n<br>    -            throw new IllegalStateException(\"cluster failed to reach the expected size of [\" + size + \"]\");\r\n<br>            }\r\n<br>        }\r\n<br>    <br></p>',NULL,'<p><br>    +    /** ensure a cluster is formed with all published nodes, but do so by using the client of the specified node */\r\n<br>        private void validateClusterFormed(String viaNode) {\r\n<br>    +        Set expectedNodes = new HashSet&lt;&gt;();\r\n<br>    +        for (NodeAndClient nodeAndClient : nodes.values()) {\r\n<br>    +            expectedNodes.add(getInstanceFromNode(ClusterService.class, nodeAndClient.node()).localNode());\r\n<br>    +        }\r\n<br>    +        logger.trace(\"validating cluster formed via [{}], expecting {}\", viaNode, expectedNodes);\r\n<br>            final Client client = client(viaNode);\r\n<br>    +        try {\r\n<br>    +            if (awaitBusy(() -&gt; {\r\n<br>    +                DiscoveryNodes discoveryNodes = client.admin().cluster().prepareState().get().getState().nodes();\r\n<br>    +                if (discoveryNodes.getSize() != expectedNodes.size()) {\r\n<br>    +                    return false;\r\n<br>    +                }\r\n<br>    +                for (DiscoveryNode expectedNode : expectedNodes) {\r\n<br>    +                    if (discoveryNodes.nodeExists(expectedNode) == false) {\r\n<br>    +                        return false;\r\n<br>    +                    }\r\n<br>    +                }\r\n<br>    +                return true;\r\n<br>    +            }, 30, TimeUnit.SECONDS) == false) {\r\n<br>    +                throw new IllegalStateException(\"cluster failed to from with expected nodes \" + expectedNodes + \" and actual nodes \" +\r\n<br>    +                    client.admin().cluster().prepareState().get().getState().nodes());\r\n<br>    +            }\r\n<br>    +        } catch (InterruptedException e) {\r\n<br>    +            throw new IllegalStateException(e);\r\n<br>            }\r\n<br>        }\r\n<br>    <br></p>',NULL,'2018-12-01 17:41:12','2018-12-01 19:48:55','diff-80781e38e5de74275f62a1934ae17d9a-20181201174112','https://github.com/elastic/elasticsearch/commit/7c55d7084253a5040587ba3ac62139ce005d1963#diff-80781e38e5de74275f62a1934ae17d9a','/var/www/QARefactorings/app/webroot/files/diff-80781e38e5de74275f62a1934ae17d9a-20181201174112/a.txt','/var/www/QARefactorings/app/webroot/files/diff-80781e38e5de74275f62a1934ae17d9a-20181201174112/b.txt','L1074','R1104','S'),(901,1,1,5,'<p>\r\n<br/>            @Inject\r\n<br/>    -        public FactoryTemplateProcessor(final Configuration config, final InjectionManager injectionManager,\r\n<br/>    -                                        @Optional final ServletContext servletContext) {\r\n<br/>    -            super(config, servletContext, \"factory\", \"fct\");\r\n<br/>    -\r\n<br/>    -            this.factory = getTemplateObjectFactory(injectionManager, TestFactory.class, Values.lazy(new Value&lt;TestFactory&gt;() {\r\n<br/>    -                @Override\r\n<br/>    -                public TestFactory get() {\r\n<br/>    -                    return new TestFactory(\"Default Test Factory\");\r\n<br/>    -                }\r\n<br/>    -            }));\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            @Inject\r\n<br/>    +        public FactoryTemplateProcessor(Configuration config, InjectionManager injectionManager) {\r\n<br/>    +            super(config, injectionManager.getInstance(ServletContext.class), \"factory\", \"fct\");\r\n<br/>    +\r\n<br/>    +            this.factory = getTemplateObjectFactory(injectionManager::createAndInitialize, TestFactory.class, Values.lazy(\r\n<br/>    +                    (Value&lt;TestFactory&gt;) () -&gt; new TestFactory(\"Default Test Factory\")));\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:14','2018-12-01 17:41:14','diff-aed7e7b1b3a81e3972f4fef2b4878370-20181201174114','https://github.com/jersey/jersey/commit/9709e30c8ef1c13478797c14e0ddaf90ecca9ccf#diff-aed7e7b1b3a81e3972f4fef2b4878370','/var/www/QARefactorings/app/webroot/files/diff-aed7e7b1b3a81e3972f4fef2b4878370-20181201174114/a.txt','/var/www/QARefactorings/app/webroot/files/diff-aed7e7b1b3a81e3972f4fef2b4878370-20181201174114/b.txt','L120','R126','S'),(902,7,1,5,'<p><br>            public List readFrom(final Class&gt; type, final Type genericType, final Annotation[] annotations,\r\n<br>                                          final MediaType mediaType, final MultivaluedMap httpHeaders,\r\n<br>                                          final InputStream entityStream) throws IOException, WebApplicationException {\r\n<br>    -            return Lists.transform(\r\n<br>    -                    Arrays.asList(ReaderWriter.readFromAsString(entityStream, mediaType).split(\",\")),\r\n<br>    -                    new Function() {\r\n<br>    -                        @Override\r\n<br>    -                        public Integer apply(final String input) {\r\n<br>    -                            return Integer.valueOf(input.trim());\r\n<br>    -                        }\r\n<br>    -                    }\r\n<br>    -            );\r\n<br>            }\r\n<br>        }\r\n<br>    <br></p>',NULL,'<p><br>            public List readFrom(final Class&gt; type, final Type genericType, final Annotation[] annotations,\r\n<br>                                          final MediaType mediaType, final MultivaluedMap httpHeaders,\r\n<br>                                          final InputStream entityStream) throws IOException, WebApplicationException {\r\n<br>    +            return Arrays.stream(ReaderWriter.readFromAsString(entityStream, mediaType).split(\",\"))\r\n<br>    +                         .map(input -&gt; Integer.valueOf(input.trim()))\r\n<br>    +                         .collect(Collectors.toList());\r\n<br>            }\r\n<br>        }\r\n<br>    <br></p>',NULL,'2018-12-01 17:41:15','2018-12-01 19:48:23','diff-fc975bebe7796242f64c8a49d280117c-20181201174115','https://github.com/jersey/jersey/commit/e5eb133193fa091b841f41ee5d1eab5611e45ec9#diff-fc975bebe7796242f64c8a49d280117c','/var/www/QARefactorings/app/webroot/files/diff-fc975bebe7796242f64c8a49d280117c-20181201174115/a.txt','/var/www/QARefactorings/app/webroot/files/diff-fc975bebe7796242f64c8a49d280117c-20181201174115/b.txt','L132','R137','S'),(903,2,1,5,'<p>           // Calculations. (depend on recommended destinations)\r\n<br/>    -        final List&lt;Calculation&gt; calculations = new ArrayList&lt;&gt;(recommended.size());\r\n<br/>    -        for (final Destination dest : recommended) {\r\n<br/>    -            calculations.add(calculation.resolveTemplate(\"from\", \"Moon\").resolveTemplate(\"to\", dest.getDestination())\r\n<br/>    -                    .request().get(Calculation.class));\r\n<br/>    -        }\r\n<br/>    <br/></p>',NULL,'<p>           // Calculations. (depend on recommended destinations)\r\n<br/>    +        final Map&lt;String, Calculation&gt; calculations = new HashMap&lt;&gt;();\r\n<br/>    +        recommended.stream().forEach(destination -&gt; {\r\n<br/>    +            try {\r\n<br/>    +                calculations.put(destination.getDestination(), calculation.resolveTemplate(\"from\", \"Moon\")\r\n<br/>    +                        .resolveTemplate(\"to\", destination.getDestination())\r\n<br/>    +                        .request().get(Calculation.class));\r\n<br/>    +            } catch (final Throwable throwable) {\r\n<br/>    +                errors.offer(\"Calculation: \" + throwable.getMessage());\r\n<br/>    +            }\r\n<br/>    +        });\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:17','2018-12-01 17:41:17','diff-64e48651bda9668a3a875987cf4e0d3e-20181201174117','https://github.com/jersey/jersey/commit/fc432d9bfc2682da0dcc99bacbb2e718259849fd#diff-64e48651bda9668a3a875987cf4e0d3e','/var/www/QARefactorings/app/webroot/files/diff-64e48651bda9668a3a875987cf4e0d3e-20181201174117/a.txt','/var/www/QARefactorings/app/webroot/files/diff-64e48651bda9668a3a875987cf4e0d3e-20181201174117/b.txt','L103','R135','S'),(904,2,1,5,'<p>\r\n<br/>            // Calculations. (depend on recommended destinations)\r\n<br/>    -        final List&lt;Calculation&gt; calculations = new ArrayList&lt;&gt;(recommended.size());\r\n<br/>    -        for (final Destination dest : recommended) {\r\n<br/>    -            calculations.add(calculation.resolveTemplate(\"from\", \"Moon\").resolveTemplate(\"to\", dest.getDestination())\r\n<br/>    -                    .request().get(Calculation.class));\r\n<br/>    -        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            // Calculations. (depend on recommended destinations)\r\n<br/>    +        final Map&lt;String, Calculation&gt; calculations = new HashMap&lt;&gt;();\r\n<br/>    +        recommended.stream().forEach(destination -&gt; {\r\n<br/>    +            try {\r\n<br/>    +                calculations.put(destination.getDestination(), calculation.resolveTemplate(\"from\", \"Moon\")\r\n<br/>    +                        .resolveTemplate(\"to\", destination.getDestination())\r\n<br/>    +                        .request().get(Calculation.class));\r\n<br/>    +            } catch (final Throwable throwable) {\r\n<br/>    +                errors.offer(\"Calculation: \" + throwable.getMessage());\r\n<br/>    +            }\r\n<br/>    +        });\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:19','2018-12-01 17:41:19','diff-64e48651bda9668a3a875987cf4e0d3e-20181201174119','https://github.com/jersey/jersey/commit/bcbacae45d02f6d65671b3ee91b9d32e899bb2c9#diff-64e48651bda9668a3a875987cf4e0d3e','/var/www/QARefactorings/app/webroot/files/diff-64e48651bda9668a3a875987cf4e0d3e-20181201174119/a.txt','/var/www/QARefactorings/app/webroot/files/diff-64e48651bda9668a3a875987cf4e0d3e-20181201174119/b.txt','L102','R135','S'),(905,7,1,5,'<p><br>         */\r\n<br>        static List transform(final Resource parent, final List list) {\r\n<br>    -        return Lists.transform(list, new Function() {\r\n<br>    -            @Override\r\n<br>    -            public ResourceMethod apply(Data data) {\r\n<br>    -                return (data == null) ? null : new ResourceMethod(parent, data);\r\n<br>    -            }\r\n<br>    -        });\r\n<br>        }\r\n<br>    <br></p>',NULL,'<p><br>         */\r\n<br>        static List transform(final Resource parent, final List list) {\r\n<br>    +        return list.stream()\r\n<br>    +                   .map(data1 -&gt; (data1 == null) ? null : new ResourceMethod(parent, data1))\r\n<br>    +                   .collect(Collectors.toList());\r\n<br>        }\r\n<br>    <br></p>',NULL,'2018-12-01 17:41:21','2018-12-01 19:48:17','diff-ccaccee397a7ef2b2eeb0bc77955b0c6-20181201174121','https://github.com/jersey/jersey/commit/e5eb133193fa091b841f41ee5d1eab5611e45ec9#diff-ccaccee397a7ef2b2eeb0bc77955b0c6','/var/www/QARefactorings/app/webroot/files/diff-ccaccee397a7ef2b2eeb0bc77955b0c6-20181201174121/a.txt','/var/www/QARefactorings/app/webroot/files/diff-ccaccee397a7ef2b2eeb0bc77955b0c6-20181201174121/b.txt','L731','R732','S'),(906,2,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public String getBody() {\r\n<br/>            StringBuilder buffer = new StringBuilder();\r\n<br/>    -        String delim = \"\";\r\n<br/>    -        for (int i = 0; i &lt; this.paramTypes.size(); i++) {\r\n<br/>    -            String paramType = this.paramTypes.get(i);\r\n<br/>    -            if (paramType != null &amp;&amp; !paramType.isEmpty()) {\r\n<br/>    -                buffer.append(delim).append(paramType).append(\" p\").append(i + 1);\r\n<br/>    -                delim = \", \";\r\n<br/>    -            }\r\n<br/>    -        }\r\n<br/>    -        return String.format(this.template, this.returnType, this.name, buffer.toString()).trim();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public String getBody() {\r\n<br/>    +\r\n<br/>            StringBuilder buffer = new StringBuilder();\r\n<br/>    +        this.params.forEach((paramName, paramType) -&gt; {\r\n<br/>    +            buffer.append(buffer.length() == 0 ? \"\" : \", \");\r\n<br/>    +            buffer.append(paramType).append(\" \").append(paramName);\r\n<br/>    +        });\r\n<br/>    +\r\n<br/>    +        return String.format(DEFAULT_TEMPLATE, this.formatModifiers(modifiers), this.returnType, this.name, buffer.toString()).trim();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:22','2018-12-01 17:41:23','diff-8959bb9f9175411018c491b97ae0806e-20181201174122','https://github.com/kaaproject/kaa/commit/bbda9ae93b8cbfea350d4fce0b7363876f7dce7c#diff-8959bb9f9175411018c491b97ae0806e','/var/www/QARefactorings/app/webroot/files/diff-8959bb9f9175411018c491b97ae0806e-20181201174122/a.txt','/var/www/QARefactorings/app/webroot/files/diff-8959bb9f9175411018c491b97ae0806e-20181201174122/b.txt','L36','R67','S'),(907,1,1,5,'<p>\r\n<br/>         */\r\n<br/>        @Override\r\n<br/>    -    public EndpointProfileDto updateProfile(SyncContext context) {\r\n<br/>            EndpointProfileDto profile = context.getEndpointProfile();\r\n<br/>            if (!operationServerHash.equals(profile.getServerHash())) {\r\n<br/>                LOG.debug(\"[{}] Operations server hash changed from {} to {}\", context.getEndpointKey(), profile.getServerHash(),\r\n<br/>                        operationServerHash);\r\n<br/>                profile.setServerHash(operationServerHash);\r\n<br/>    -            context.setUpdateProfileRequired(true);\r\n<br/>    -        }\r\n<br/>    -\r\n<br/>    -        if (context.isUpdateProfileRequired()) {\r\n<br/>    -            context.setEndpointProfile(profileService.updateProfile(profile));\r\n<br/>            }\r\n<br/>    -        return context.getEndpointProfile();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>         */\r\n<br/>        @Override\r\n<br/>    +    public SyncContext syncProfileServerHash(SyncContext context) {\r\n<br/>            EndpointProfileDto profile = context.getEndpointProfile();\r\n<br/>            if (!operationServerHash.equals(profile.getServerHash())) {\r\n<br/>                LOG.debug(\"[{}] Operations server hash changed from {} to {}\", context.getEndpointKey(), profile.getServerHash(),\r\n<br/>                        operationServerHash);\r\n<br/>                profile.setServerHash(operationServerHash);\r\n<br/>    +            context.setEndpointProfile(profileService.updateProfile(profile, (storedProfile, newProfile) -&gt; {\r\n<br/>    +                return storedProfile;\r\n<br/>    +            }));\r\n<br/>            }\r\n<br/>    +        return context;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:25','2018-12-01 17:41:25','diff-9bfccbe0a376fd87d817fcda4dd76b29-20181201174125','https://github.com/kaaproject/kaa/commit/8e389a24730b68e1982a66a3ffc335900f47b19d#diff-9bfccbe0a376fd87d817fcda4dd76b29','/var/www/QARefactorings/app/webroot/files/diff-9bfccbe0a376fd87d817fcda4dd76b29-20181201174125/a.txt','/var/www/QARefactorings/app/webroot/files/diff-9bfccbe0a376fd87d817fcda4dd76b29-20181201174125/b.txt','L274','R327','S'),(908,9,1,5,'<p><br>        @Override\r\n<br>    -    public CTLSchemaMetaInfoDto updateCTLSchemaMetaInfoScope(CTLSchemaMetaInfoDto ctlSchemaMetaInfo)\r\n<br>                throws KaaAdminServiceException {\r\n<br>    -        this.checkAuthority(KaaAuthorityDto.values());\r\n<br>            try {\r\n<br>    -            checkCTLSchemaEditScope(ctlSchemaMetaInfo.getTenantId(), ctlSchemaMetaInfo.getApplicationId());\r\n<br>                return controlService.updateCTLSchemaMetaInfoScope(ctlSchemaMetaInfo);\r\n<br>            } catch (Exception cause) {\r\n<br>                throw Utils.handleException(cause);\r\n<br>    @@ -3467,8 +3600,8 @@ public CtlSchemaFormDto getCTLSchemaFormByMetaInfoIdAndVer(String metaInfoId, in\r\n<br>        }\r\n<br>    <br></p>',NULL,'<p><br>    +\r\n<br>        @Override\r\n<br>    +    public CTLSchemaMetaInfoDto promoteScopeToTenant(String applicationId, String fqn)\r\n<br>                throws KaaAdminServiceException {\r\n<br>    +        checkAuthority(KaaAuthorityDto.values());\r\n<br>    +        final String tenantId = getTenantId();\r\n<br>    +        checkApplicationId(applicationId);\r\n<br>    +        checkCTLSchemaEditScope(tenantId, applicationId);\r\n<br>    +\r\n<br>            try {\r\n<br>    +            Set dependencies = new HashSet&lt;&gt;();\r\n<br>    +            List versions = controlService.getAllCTLSchemaVersionsByFqnTenantIdAndApplicationId(fqn, tenantId, applicationId);\r\n<br>    +\r\n<br>    +            if(versions.isEmpty()) {\r\n<br>    +                throw new KaaAdminServiceException(\"The requested item was not found!\", ServiceErrorCode.ITEM_NOT_FOUND);\r\n<br>    +            }\r\n<br>    +\r\n<br>    +            // meta info same for all versions\r\n<br>    +            CTLSchemaMetaInfoDto ctlSchemaMetaInfo = controlService.getCTLSchemaByFqnVersionTenantIdAndApplicationId(fqn, versions.get(0), tenantId, applicationId).getMetaInfo();\r\n<br>    +            ctlSchemaMetaInfo.setApplicationId(null); //promote to tenant\r\n<br>    +\r\n<br>    +            // get dep of all versions\r\n<br>    +            for (Integer version : versions) {\r\n<br>    +                CTLSchemaDto schema = controlService.getCTLSchemaByFqnVersionTenantIdAndApplicationId(fqn, version, tenantId, applicationId);\r\n<br>    +                Set schemaDependents = schema.getDependencySet();\r\n<br>    +                dependencies.addAll(schemaDependents.stream()\r\n<br>    +                        .filter(dep -&gt; dep.getMetaInfo().getScope() == CTLSchemaScopeDto.APPLICATION)\r\n<br>    +                        .collect(Collectors.toList()));\r\n<br>    +            }\r\n<br>    +\r\n<br>    +            // check if CT has dependencies with application scope\r\n<br>    +            if (!dependencies.isEmpty()) {\r\n<br>    +                String message = \"Can\'t promote the common type version as it has references on following common type(s) with application scope: \"\r\n<br>    +                        + asText(dependencies);\r\n<br>    +                throw new KaaAdminServiceException(message, ServiceErrorCode.CONFLICT);\r\n<br>    +            }\r\n<br>    +\r\n<br>                return controlService.updateCTLSchemaMetaInfoScope(ctlSchemaMetaInfo);\r\n<br>            } catch (Exception cause) {\r\n<br>                throw Utils.handleException(cause);\r\n<br>    @@ -3467,8 +3600,8 @@ public CtlSchemaFormDto getCTLSchemaFormByMetaInfoIdAndVer(String metaInfoId, in\r\n<br>        }\r\n<br>    <br></p>',NULL,'2018-12-01 17:41:27','2018-12-01 19:47:00','diff-1d3c5b17cd31869a4251d3aed8a8ae67-20181201174127','https://github.com/kaaproject/kaa/commit/22179b96fc5f66319a63abfb52e96075d2ed4918#diff-1d3c5b17cd31869a4251d3aed8a8ae67','/var/www/QARefactorings/app/webroot/files/diff-1d3c5b17cd31869a4251d3aed8a8ae67-20181201174127/a.txt','/var/www/QARefactorings/app/webroot/files/diff-1d3c5b17cd31869a4251d3aed8a8ae67-20181201174127/b.txt','L3352','R3601','S'),(909,1,1,5,'<p>\r\n<br/>        private void initFab() {\r\n<br/>    -        mFloatingButton.setOnClickListener(v -&gt; mPresenter.addNewApp());\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        private void initFab() {\r\n<br/>    +        mFloatingButton.setOnClickListener(v -&gt; {\r\n<br/>    +            CircularAnim.fullActivity(this, mFloatingButton)\r\n<br/>    +                    .colorOrImageRes(R.color.colorPrimaryRavel)\r\n<br/>    +                    .go(() -&gt; ListAppActivity.gotoListApp(this));\r\n<br/>    +        });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:29','2018-12-01 17:41:29','diff-a3e60a66d5d32b8a6755633f27ee2aee-20181201174129','https://github.com/asLody/VirtualApp/commit/963f78c437609897b78904df6e6dd4509ec46b56#diff-a3e60a66d5d32b8a6755633f27ee2aee','/var/www/QARefactorings/app/webroot/files/diff-a3e60a66d5d32b8a6755633f27ee2aee-20181201174129/a.txt','/var/www/QARefactorings/app/webroot/files/diff-a3e60a66d5d32b8a6755633f27ee2aee-20181201174129/b.txt','L109','R125','N'),(910,1,1,5,'<p>\r\n<br/>        // We should unregister all deployed verticles.\r\n<br/>    @@ -26,12 +30,23 @@ public void stop() {\r\n<br/>      @Bind(aggregate = true)\r\n<br/>      public void bindVerticle(Verticle verticle) {\r\n<br/>        LOGGER.info(\"Deploying verticle \" + verticle);\r\n<br/>    -    vertx.deployVerticle(verticle);\r\n<br/>      }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        // We should unregister all deployed verticles.\r\n<br/>    @@ -26,12 +30,23 @@ public void stop() {\r\n<br/>      @Bind(aggregate = true)\r\n<br/>      public void bindVerticle(Verticle verticle) {\r\n<br/>        LOGGER.info(\"Deploying verticle \" + verticle);\r\n<br/>    +    TcclSwitch.executeWithTCCLSwitch(() -&gt; {\r\n<br/>    +      vertx.deployVerticle(verticle, ar -&gt; {\r\n<br/>    +        if (ar.succeeded()) {\r\n<br/>    +          deploymentIds.put(verticle, ar.result());\r\n<br/>    +        } else {\r\n<br/>    +          LOGGER.log(Level.SEVERE, \"Cannot deploy \" + verticle, ar.cause());\r\n<br/>    +        }\r\n<br/>    +      });\r\n<br/>    +    });\r\n<br/>      }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:31','2018-12-01 17:41:31','diff-ee83a3df87aeca91562e7452094768eb-20181201174131','https://github.com/vert-x3/vertx-examples/commit/c980de3d9c44b21950700a28164622a236cb0632#diff-ee83a3df87aeca91562e7452094768eb','/var/www/QARefactorings/app/webroot/files/diff-ee83a3df87aeca91562e7452094768eb-20181201174131/a.txt','/var/www/QARefactorings/app/webroot/files/diff-ee83a3df87aeca91562e7452094768eb-20181201174131/b.txt','L23','R43','S'),(911,1,1,5,'<p>\r\n<br/>      @Validate\r\n<br/>    -  public void start() {\r\n<br/>        LOGGER.info(\"Creating vertx HTTP server\");\r\n<br/>    -    server = vertx.createHttpServer().requestHandler((r) -&gt; {\r\n<br/>          r.response().end(\"Hello from OSGi !\");\r\n<br/>        }).listen(8080);\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>      @Validate\r\n<br/>    +  public void start() throws Exception {\r\n<br/>        LOGGER.info(\"Creating vertx HTTP server\");\r\n<br/>    +    HttpServer server = executeWithTCCLSwitch(() -&gt; vertx.createHttpServer());\r\n<br/>    +    server.requestHandler((r) -&gt; {\r\n<br/>          r.response().end(\"Hello from OSGi !\");\r\n<br/>        }).listen(8080);\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:33','2018-12-01 17:41:33','diff-5522c63d606923f978eb04c2eb5e85bb-20181201174133','https://github.com/vert-x3/vertx-examples/commit/c980de3d9c44b21950700a28164622a236cb0632#diff-5522c63d606923f978eb04c2eb5e85bb','/var/www/QARefactorings/app/webroot/files/diff-5522c63d606923f978eb04c2eb5e85bb-20181201174133/a.txt','/var/www/QARefactorings/app/webroot/files/diff-5522c63d606923f978eb04c2eb5e85bb-20181201174133/b.txt','L21','R32','N'),(912,1,1,5,'<p>\r\n<br/>        // Start the front end server using the Jax-RS controller\r\n<br/>        vertx.createHttpServer()\r\n<br/>            .requestHandler(new VertxRequestHandler(vertx, deployment))\r\n<br/>    -        .listen(8080);\r\n<br/>    -    System.out.println(\"started\");\r\n<br/>      }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        // Start the front end server using the Jax-RS controller\r\n<br/>        vertx.createHttpServer()\r\n<br/>            .requestHandler(new VertxRequestHandler(vertx, deployment))\r\n<br/>    +        .listen(8080, ar -&gt; {\r\n<br/>    +          System.out.println(\"Server started on port \"+ ar.result().actualPort());\r\n<br/>    +        });\r\n<br/>      }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:35','2018-12-01 17:41:35','diff-519e3a1391145ba93c3a91bcd4474d33-20181201174135','https://github.com/vert-x3/vertx-examples/commit/4da3461c80594f15598f66e96c39ba21772abf3f#diff-519e3a1391145ba93c3a91bcd4474d33','/var/www/QARefactorings/app/webroot/files/diff-519e3a1391145ba93c3a91bcd4474d33-20181201174135/a.txt','/var/www/QARefactorings/app/webroot/files/diff-519e3a1391145ba93c3a91bcd4474d33-20181201174135/b.txt','L20','R27','S'),(913,1,1,5,'<p>\r\n<br/>        private void createReminderAlarmsDelayed(final Context context)\r\n<br/>        {\r\n<br/>    -        new Handler().postDelayed(new Runnable()\r\n<br/>    -        {\r\n<br/>    -            @Override\r\n<br/>    -            public void run()\r\n<br/>    -            {\r\n<br/>    -                ReminderUtils.createReminderAlarms(context);\r\n<br/>    -            }\r\n<br/>    -        }, 5000);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        private void createReminderAlarmsDelayed(final Context context)\r\n<br/>        {\r\n<br/>    +        new Handler().postDelayed(() -&gt; ReminderUtils.createReminderAlarms(context), 5000);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:37','2018-12-01 17:41:38','diff-1772454fe9f81a5d5335a08354ea68be-20181201174137','https://github.com/iSoron/uhabits/commit/7e8a2a0c1c44b8b8b8e6419095dce25eeed41c73#diff-1772454fe9f81a5d5335a08354ea68be','/var/www/QARefactorings/app/webroot/files/diff-1772454fe9f81a5d5335a08354ea68be-20181201174137/a.txt','/var/www/QARefactorings/app/webroot/files/diff-1772454fe9f81a5d5335a08354ea68be-20181201174137/b.txt','L85','R101','S'),(914,1,1,5,'<p>\r\n<br/>        @Test\r\n<br/>        public void testExportCSV() throws Throwable\r\n<br/>        {\r\n<br/>    -        ExportDBTask task = new ExportDBTask(null);\r\n<br/>    -        task.setListener(new ExportDBTask.Listener()\r\n<br/>    -        {\r\n<br/>    -            @Override\r\n<br/>    -            public void onExportDBFinished(String filename)\r\n<br/>    -            {\r\n<br/>    -                assertThat(filename, is(not(nullValue())));\r\n<br/>    -                File f = new File(filename);\r\n<br/>    -                assertTrue(f.exists());\r\n<br/>    -                assertTrue(f.canRead());\r\n<br/>    -            }\r\n<br/>            });\r\n<br/>    -        task.execute();\r\n<br/>            waitForAsyncTasks();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Test\r\n<br/>        public void testExportCSV() throws Throwable\r\n<br/>        {\r\n<br/>    +        ExportDBTask task = new ExportDBTask(filename -&gt; {\r\n<br/>    +            assertThat(filename, is(not(nullValue())));\r\n<br/>    +            File f = new File(filename);\r\n<br/>    +            assertTrue(f.exists());\r\n<br/>    +            assertTrue(f.canRead());\r\n<br/>            });\r\n<br/>    +        taskRunner.execute(task);\r\n<br/>            waitForAsyncTasks();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:40','2018-12-01 17:41:40','diff-d1aadeca7890eb5e0471d5d3ef093f3f-20181201174140','https://github.com/iSoron/uhabits/commit/d54de9df89b23e4a9c57dcf1cf5c2e639cb09bd9#diff-d1aadeca7890eb5e0471d5d3ef093f3f','/var/www/QARefactorings/app/webroot/files/diff-d1aadeca7890eb5e0471d5d3ef093f3f-20181201174140/a.txt','/var/www/QARefactorings/app/webroot/files/diff-d1aadeca7890eb5e0471d5d3ef093f3f-20181201174140/b.txt','L48','R60','S'),(915,4,1,5,'<p>\r\n<br/>        // Invoke the pattern matching method on each file.\r\n<br/>        @Override\r\n<br/>    -    public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\r\n<br/>    -        // If file cannot be read then throw IOException\r\n<br/>    -        if (!Files.isReadable(file)) {\r\n<br/>    -            throw new IOException(\"Cannot read \" + file);\r\n<br/>            }\r\n<br/>    -\r\n<br/>    -        // Ensure only Swift files are linted\r\n<br/>    -        if (entityOfInterest(file) &amp;&amp; file.toString().endsWith(\".swift\")) {\r\n<br/>    -            fileNames.add(file.toAbsolutePath().toString());\r\n<br/>            }\r\n<br/>    -\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        // Invoke the pattern matching method on each file.\r\n<br/>        @Override\r\n<br/>    +    public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) throws IOException {\r\n<br/>    +        Path relative = Paths.get(base.relativize(file.toUri()).getPath());\r\n<br/>    +        if (excludeMatcher.stream().anyMatch(pathMatcher -&gt; pathMatcher.matches(relative))) {\r\n<br/>    +            return FileVisitResult.CONTINUE;\r\n<br/>            }\r\n<br/>    +        if ((isParentIncluded.getOrDefault(file.getParent(), false)\r\n<br/>    +            || includeMatcher.stream().anyMatch(pathMatcher -&gt; pathMatcher.matches(relative)))\r\n<br/>    +            &amp;&amp; (file.toFile().getCanonicalPath().endsWith(\".swift\") &amp;&amp; file.toFile().canRead())) {\r\n<br/>    +            fileNames.add(file.toFile().getCanonicalPath());\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:42','2018-12-01 17:41:42','diff-2bbb02aa170177126cca750fb2e06474-20181201174142','https://github.com/sleekbyte/tailor/commit/e49e48f6ededc8611ab5ec888c861412071cdaff#diff-2bbb02aa170177126cca750fb2e06474','/var/www/QARefactorings/app/webroot/files/diff-2bbb02aa170177126cca750fb2e06474-20181201174142/a.txt','/var/www/QARefactorings/app/webroot/files/diff-2bbb02aa170177126cca750fb2e06474-20181201174142/b.txt','L72','R64','S'),(916,1,1,5,'<p>\r\n<br/>            Map&lt;String, Object&gt; output = new HashMap&lt;&gt;();\r\n<br/>            output.put(Messages.SUMMARY_KEY,\r\n<br/>                Formatter.formatSummary(numFiles, numSkipped, numErrors, numWarnings).replace(NEWLINE_PATTERN, \"\"));\r\n<br/>    -        Collections.sort(FILES, Collections.reverseOrder(new Comparator&lt;Map&lt;String, Object&gt;&gt;() {\r\n<br/>    -            @Override\r\n<br/>    -            public int compare(Map&lt;String, Object&gt; o1, Map&lt;String, Object&gt; o2) {\r\n<br/>    -                return Integer.compare(\r\n<br/>    -                    ((List) o1.get(Messages.VIOLATIONS_KEY)).size(),\r\n<br/>    -                    ((List) o2.get(Messages.VIOLATIONS_KEY)).size()\r\n<br/>    -                );\r\n<br/>    -            }\r\n<br/>    -        }));\r\n<br/>            output.put(Messages.FILES_KEY, FILES);\r\n<br/>            output.put(Messages.VERSION_LONG_OPT, new ConfigProperties().getVersion());\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            Map&lt;String, Object&gt; output = new HashMap&lt;&gt;();\r\n<br/>            output.put(Messages.SUMMARY_KEY,\r\n<br/>                Formatter.formatSummary(numFiles, numSkipped, numErrors, numWarnings).replace(NEWLINE_PATTERN, \"\"));\r\n<br/>    +        // Sort files by descending order of the number of violations\r\n<br/>    +        FILES.sort((o1, o2) -&gt;\r\n<br/>    +            ((List) o2.get(Messages.VIOLATIONS_KEY)).size() - ((List) o1.get(Messages.VIOLATIONS_KEY)).size());\r\n<br/>            output.put(Messages.FILES_KEY, FILES);\r\n<br/>            output.put(Messages.VERSION_LONG_OPT, new ConfigProperties().getVersion());\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:44','2018-12-01 17:41:44','diff-ca76d22f3669b4c5f8955c445e291079-20181201174144','https://github.com/sleekbyte/tailor/commit/15c3a3a862a27c73504a9f9965c9a986be6a232e#diff-ca76d22f3669b4c5f8955c445e291079','/var/www/QARefactorings/app/webroot/files/diff-ca76d22f3669b4c5f8955c445e291079-20181201174144/a.txt','/var/www/QARefactorings/app/webroot/files/diff-ca76d22f3669b4c5f8955c445e291079-20181201174144/b.txt','L80','R86','S'),(917,8,1,5,'<p>\r\n<br/>        private long getNumMessagesWithSeverity(Severity severity) {\r\n<br/>    -        return msgBuffer.values().stream().filter(msg -&gt; msg.getSeverity().equals(severity)).count();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        private long getNumMessagesWithSeverity(Severity severity) {\r\n<br/>    +        return msgBuffer.values().stream()\r\n<br/>    +            .filter(msg -&gt; !ignoredLineNumbers.contains(msg.getLineNumber()))\r\n<br/>    +            .filter(msg -&gt; msg.getSeverity().equals(severity)).count();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:45','2018-12-01 17:41:46','diff-6ba9e01f8a0556527567496ee6f3ab38-20181201174145','https://github.com/sleekbyte/tailor/commit/ee3c8df2847889622c381412b14ea817dae7af5c#diff-6ba9e01f8a0556527567496ee6f3ab38','/var/www/QARefactorings/app/webroot/files/diff-6ba9e01f8a0556527567496ee6f3ab38-20181201174145/a.txt','/var/www/QARefactorings/app/webroot/files/diff-6ba9e01f8a0556527567496ee6f3ab38-20181201174145/b.txt','L135','R141','N'),(918,2,1,5,'<p>\r\n<br/>         */\r\n<br/>        private void walkParseTree(List&lt;SwiftBaseListener&gt; listeners, TopLevelContext tree) {\r\n<br/>            ParseTreeWalker walker = new ParseTreeWalker();\r\n<br/>    -        for (SwiftBaseListener listener : listeners) {\r\n<br/>    -            // The following listeners are used by DeclarationListener to walk the tree\r\n<br/>    -            if (listener instanceof ConstantNamingListener || listener instanceof KPrefixListener) {\r\n<br/>    -                continue;\r\n<br/>    -            }\r\n<br/>    -            walker.walk(listener, tree);\r\n<br/>    -        }\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>         */\r\n<br/>        private void walkParseTree(List&lt;SwiftBaseListener&gt; listeners, TopLevelContext tree) {\r\n<br/>            ParseTreeWalker walker = new ParseTreeWalker();\r\n<br/>    +        listeners.forEach(listener -&gt; walker.walk(listener, tree));\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:47','2018-12-01 17:41:48','diff-241fb54b6817fdeccb9de857051ca79a-20181201174147','https://github.com/sleekbyte/tailor/commit/2b6961dee5176d315242014f41187da3c7fb69b9#diff-241fb54b6817fdeccb9de857051ca79a','/var/www/QARefactorings/app/webroot/files/diff-241fb54b6817fdeccb9de857051ca79a-20181201174147/a.txt','/var/www/QARefactorings/app/webroot/files/diff-241fb54b6817fdeccb9de857051ca79a-20181201174147/b.txt','L210','R215','S'),(919,4,1,5,'<p>\r\n<br/>        // Invoke the pattern matching method on each directory.\r\n<br/>        @Override\r\n<br/>    -    public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) {\r\n<br/>    -        // Do not analyze the directory\'s children if blacklisted.\r\n<br/>    -        Path dirName = dir.getFileName();\r\n<br/>    -        if (dirName != null &amp;&amp; !entityOfInterest(dir)) {\r\n<br/>                return FileVisitResult.SKIP_SUBTREE;\r\n<br/>    -        } else {\r\n<br/>                return FileVisitResult.CONTINUE;\r\n<br/>            }\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        // Invoke the pattern matching method on each directory.\r\n<br/>        @Override\r\n<br/>    +    public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attributes) {\r\n<br/>    +        Path relative = Paths.get(base.relativize(dir.toUri()).getPath());\r\n<br/>    +        if (excludeMatcher.stream().anyMatch(pathMatcher -&gt; pathMatcher.matches(relative))) {\r\n<br/>                return FileVisitResult.SKIP_SUBTREE;\r\n<br/>    +        }\r\n<br/>    +        if (isParentIncluded.getOrDefault(dir.getParent(), false)\r\n<br/>    +            || includeMatcher.stream().anyMatch(pathMatcher -&gt; pathMatcher.matches(relative))) {\r\n<br/>    +            isParentIncluded.put(dir, true);\r\n<br/>                return FileVisitResult.CONTINUE;\r\n<br/>            }\r\n<br/>    +        return FileVisitResult.CONTINUE;\r\n<br/>    +    }\r\n<br/>    +\r\n<br/>    +    @Override\r\n<br/>    +    public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOException {\r\n<br/>    +        isParentIncluded.put(dir, false);\r\n<br/>    +        return super.postVisitDirectory(dir, exc);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:50','2018-12-01 17:41:50','diff-2bbb02aa170177126cca750fb2e06474-20181201174150','https://github.com/sleekbyte/tailor/commit/e49e48f6ededc8611ab5ec888c861412071cdaff#diff-2bbb02aa170177126cca750fb2e06474','/var/www/QARefactorings/app/webroot/files/diff-2bbb02aa170177126cca750fb2e06474-20181201174150/a.txt','/var/www/QARefactorings/app/webroot/files/diff-2bbb02aa170177126cca750fb2e06474-20181201174150/b.txt','L88','R87','S'),(920,8,1,5,'<p>\r\n<br/>            if (left != null) {\r\n<br/>    -            Token leftToken = left instanceof ParserRuleContext ? ((ParserRuleContext) left).getStop()\r\n<br/>    -                : ((TerminalNodeImpl) left).getSymbol();\r\n<br/>                Token start = ctx.getStart();\r\n<br/>    -            if (start.getLine() - leftToken.getLine() != 2) {\r\n<br/>                    printer.error(Messages.FUNCTION + Messages.NEWLINE_BEFORE, ListenerUtil.getTokenLocation(start));\r\n<br/>                }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            if (left != null) {\r\n<br/>                Token start = ctx.getStart();\r\n<br/>    +            long numberOfNewLineChars = tokenStream.getHiddenTokensToLeft(start.getTokenIndex(), SwiftLexer.WHITESPACE)\r\n<br/>    +                .stream()\r\n<br/>    +                .filter(token -&gt; token.getText().equals(\"\\n\"))\r\n<br/>    +                .count();\r\n<br/>    +            if (numberOfNewLineChars &lt; 2) {\r\n<br/>                    printer.error(Messages.FUNCTION + Messages.NEWLINE_BEFORE, ListenerUtil.getTokenLocation(start));\r\n<br/>                }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:51','2018-12-01 17:41:52','diff-ec262536ff63a6278db137e284fded7d-20181201174151','https://github.com/sleekbyte/tailor/commit/404e54a103cafbc39c96fc6675dc4f4d469e4ba3#diff-ec262536ff63a6278db137e284fded7d','/var/www/QARefactorings/app/webroot/files/diff-ec262536ff63a6278db137e284fded7d-20181201174151/a.txt','/var/www/QARefactorings/app/webroot/files/diff-ec262536ff63a6278db137e284fded7d-20181201174151/b.txt','L598','R611','S'),(921,1,1,5,'<p>\r\n<br/>    	public void testDistributedAggregator() throws Exception {\r\n<br/>    		this.releaseStrategy.reset(1);\r\n<br/>    		Executors.newSingleThreadExecutor().execute(asyncSend(\"foo\", 1, 1));\r\n<br/>    -		Executors.newSingleThreadExecutor().execute(new Runnable() {\r\n<br/>    -\r\n<br/>    -			@Override\r\n<br/>    -			public void run() {\r\n<br/>    -				try {\r\n<br/>    -					in2.send(new GenericMessage&lt;String&gt;(\"bar\", stubHeaders(2, 2, 1)));\r\n<br/>    -				}\r\n<br/>    -				catch (Exception e) {\r\n<br/>    -					e.printStackTrace();\r\n<br/>    -					exception = e;\r\n<br/>    -				}\r\n<br/>    			}\r\n<br/>    		});\r\n<br/>    		assertTrue(this.releaseStrategy.latch2.await(10, TimeUnit.SECONDS));\r\n<br/>    @@ -124,17 +119,12 @@ public void run() {\r\n<br/>    	}\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>    	public void testDistributedAggregator() throws Exception {\r\n<br/>    		this.releaseStrategy.reset(1);\r\n<br/>    		Executors.newSingleThreadExecutor().execute(asyncSend(\"foo\", 1, 1));\r\n<br/>    +		Executors.newSingleThreadExecutor().execute(() -&gt; {\r\n<br/>    +			try {\r\n<br/>    +				in2.send(new GenericMessage&lt;String&gt;(\"bar\", stubHeaders(2, 2, 1)));\r\n<br/>    +			}\r\n<br/>    +			catch (Exception e) {\r\n<br/>    +				exception = e;\r\n<br/>    			}\r\n<br/>    		});\r\n<br/>    		assertTrue(this.releaseStrategy.latch2.await(10, TimeUnit.SECONDS));\r\n<br/>    @@ -124,17 +119,12 @@ public void run() {\r\n<br/>    	}\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:54','2018-12-01 17:41:54','diff-0d5a8af55d0dc1e3f95ef157fa30cc23-20181201174154','https://github.com/spring-projects/spring-integration/commit/4a200e069b105bdc46568cd2695bc88d512560c8#diff-0d5a8af55d0dc1e3f95ef157fa30cc23','/var/www/QARefactorings/app/webroot/files/diff-0d5a8af55d0dc1e3f95ef157fa30cc23-20181201174154/a.txt','/var/www/QARefactorings/app/webroot/files/diff-0d5a8af55d0dc1e3f95ef157fa30cc23-20181201174154/b.txt','L103','R120','S'),(922,1,1,5,'<p>\r\n<br/>    	private Runnable asyncSend(final String payload, final int sequence, final int correlation) {\r\n<br/>    -		return new Runnable() {\r\n<br/>    -\r\n<br/>    -			@Override\r\n<br/>    -			public void run() {\r\n<br/>    -				try {\r\n<br/>    -					in.send(new GenericMessage&lt;String&gt;(payload, stubHeaders(sequence, 2, correlation)));\r\n<br/>    -				}\r\n<br/>    -				catch (Exception e) {\r\n<br/>    -					e.printStackTrace();\r\n<br/>    -					exception = e;\r\n<br/>    -				}\r\n<br/>    			}\r\n<br/>    		};\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>    	private Runnable asyncSend(final String payload, final int sequence, final int correlation) {\r\n<br/>    +		return () -&gt; {\r\n<br/>    +			try {\r\n<br/>    +				in.send(new GenericMessage&lt;String&gt;(payload, stubHeaders(sequence, 2, correlation)));\r\n<br/>    +			}\r\n<br/>    +			catch (Exception e) {\r\n<br/>    +				exception = e;\r\n<br/>    			}\r\n<br/>    		};\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:56','2018-12-01 17:41:56','diff-0d5a8af55d0dc1e3f95ef157fa30cc23-20181201174156','https://github.com/spring-projects/spring-integration/commit/4a200e069b105bdc46568cd2695bc88d512560c8#diff-0d5a8af55d0dc1e3f95ef157fa30cc23','/var/www/QARefactorings/app/webroot/files/diff-0d5a8af55d0dc1e3f95ef157fa30cc23-20181201174156/a.txt','/var/www/QARefactorings/app/webroot/files/diff-0d5a8af55d0dc1e3f95ef157fa30cc23-20181201174156/b.txt','L125','R130','S'),(923,1,1,5,'<p>\r\n<br/>    	public void afterPropertiesSet() throws Exception {\r\n<br/>    		this.sftpFolder.create();\r\n<br/>    		this.localFolder.create();\r\n<br/>    -		server.setPasswordAuthenticator(new PasswordAuthenticator() {\r\n<br/>    -\r\n<br/>    -			@Override\r\n<br/>    -			public boolean authenticate(String arg0, String arg1, ServerSession arg2) {\r\n<br/>    -				return true;\r\n<br/>    -			}\r\n<br/>    -\r\n<br/>    -		});\r\n<br/>    		server.setPort(0);\r\n<br/>    -		server.setKeyPairProvider(new SimpleGeneratorHostKeyProvider(\"hostkey.ser\"));\r\n<br/>    -		this.server.setSubsystemFactories(Collections.&lt;NamedFactory&lt;Command&gt;&gt;singletonList(new SftpSubsystem.Factory()));\r\n<br/>    -		this.server.setFileSystemFactory(new VirtualFileSystemFactory(sftpRootFolder.getAbsolutePath()));\r\n<br/>    		server.start();\r\n<br/>    	}\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>    	public void afterPropertiesSet() throws Exception {\r\n<br/>    		this.sftpFolder.create();\r\n<br/>    		this.localFolder.create();\r\n<br/>    +		server.setPasswordAuthenticator((arg0, arg1, arg2) -&gt; true);\r\n<br/>    		server.setPort(0);\r\n<br/>    +		server.setKeyPairProvider(new SimpleGeneratorHostKeyProvider(new File(\"hostkey.ser\")));\r\n<br/>    +		this.server.setSubsystemFactories(Collections.singletonList(new SftpSubsystemFactory()));\r\n<br/>    +		this.server.setFileSystemFactory(new VirtualFileSystemFactory(sftpRootFolder.toPath()));\r\n<br/>    		server.start();\r\n<br/>    	}\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:41:58','2018-12-01 17:41:58','diff-98d3fc2674005c86b06aeab170c1175a-20181201174158','https://github.com/spring-projects/spring-integration/commit/cb76cfac16f9f4db6d24449585b87aa048f55e1a#diff-98d3fc2674005c86b06aeab170c1175a','/var/www/QARefactorings/app/webroot/files/diff-98d3fc2674005c86b06aeab170c1175a-20181201174158/a.txt','/var/www/QARefactorings/app/webroot/files/diff-98d3fc2674005c86b06aeab170c1175a-20181201174158/b.txt','L120','R126','S'),(924,1,1,5,'<p>\r\n<br/>        @Produces\r\n<br/>        @CustomHumanTaskService\r\n<br/>        @Override\r\n<br/>        public CommandBasedTaskService produceTaskService() {\r\n<br/>    -        return super.produceTaskService();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Produces\r\n<br/>        @CustomHumanTaskService\r\n<br/>        @Override\r\n<br/>        public CommandBasedTaskService produceTaskService() {\r\n<br/>    +        CommandBasedTaskService taskServiceMock = Mockito.mock(CommandBasedTaskService.class);\r\n<br/>    +        Mockito.when(taskServiceMock.execute(Mockito.any())).thenAnswer((InvocationOnMock invocation) -&gt; {\r\n<br/>    +            throw new CustomTaskServiceInUse();\r\n<br/>    +        });\r\n<br/>    +        return taskServiceMock;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:00','2018-12-01 17:42:00','diff-81c4ecd721868f3875ca8390cb33d9ac-20181201174200','https://github.com/kiegroup/jbpm/commit/0b6955d69fc377d421dd23e2f2d30872f4ce62cb#diff-81c4ecd721868f3875ca8390cb33d9ac','/var/www/QARefactorings/app/webroot/files/diff-81c4ecd721868f3875ca8390cb33d9ac-20181201174200/a.txt','/var/www/QARefactorings/app/webroot/files/diff-81c4ecd721868f3875ca8390cb33d9ac-20181201174200/b.txt','L45','R42','S'),(925,2,1,5,'<p>\r\n<br/>            private void initExtensions(Context context) {\r\n<br/>    -            for (SwaggerModelExtension extension : extensionRegistry.getSwaggerModelExtensions())\r\n<br/>    -                extension.setGlobalContext(context);\r\n<br/>    -\r\n<br/>    -            for (OverviewDocumentExtension extension : extensionRegistry.getOverviewDocumentExtensions())\r\n<br/>    -                extension.setGlobalContext(context);\r\n<br/>    -\r\n<br/>    -            for (DefinitionsDocumentExtension extension : extensionRegistry.getDefinitionsDocumentExtensions())\r\n<br/>    -                extension.setGlobalContext(context);\r\n<br/>    -\r\n<br/>    -            for (PathsDocumentExtension extension : extensionRegistry.getPathsDocumentExtensions())\r\n<br/>    -                extension.setGlobalContext(context);\r\n<br/>    -\r\n<br/>    -            for (SecurityDocumentExtension extension : extensionRegistry.getSecurityDocumentExtensions())\r\n<br/>    -                extension.setGlobalContext(context);\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            private void initExtensions(Context context) {\r\n<br/>    +            extensionRegistry.getSwaggerModelExtensions().forEach(extension -&gt; extension.setGlobalContext(context));\r\n<br/>    +            extensionRegistry.getOverviewDocumentExtensions().forEach(extension -&gt; extension.setGlobalContext(context));\r\n<br/>    +            extensionRegistry.getDefinitionsDocumentExtensions().forEach(extension -&gt; extension.setGlobalContext(context));\r\n<br/>    +            extensionRegistry.getPathsDocumentExtensions().forEach(extension -&gt; extension.setGlobalContext(context));\r\n<br/>    +            extensionRegistry.getSecurityDocumentExtensions().forEach(extension -&gt; extension.setGlobalContext(context));\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:02','2018-12-01 17:42:02','diff-fc1497af780df894f7dbd24bb4d4809e-20181201174202','https://github.com/Swagger2Markup/swagger2markup/commit/5b1a1a2bcf4194a9cdea203011b099cb82dc70ac#diff-fc1497af780df894f7dbd24bb4d4809e','/var/www/QARefactorings/app/webroot/files/diff-fc1497af780df894f7dbd24bb4d4809e-20181201174202/a.txt','/var/www/QARefactorings/app/webroot/files/diff-fc1497af780df894f7dbd24bb4d4809e-20181201174202/b.txt','L321','R328','S'),(926,7,1,5,'<p>\r\n<br/>        @Override\r\n<br/>    -    public MarkupDocBuilder render() {\r\n<br/>    -        markupDocBuilder.sectionTitleLevel(titleLevel, labels.getString(Labels.PRODUCES));\r\n<br/>    -        markupDocBuilder.unorderedList(produces.stream()\r\n<br/>    -                .map(this::literalText).collect(Collectors.toList()));\r\n<br/>            return markupDocBuilder;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>    +    public MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params){\r\n<br/>    +        markupDocBuilder.sectionTitleLevel(params.titleLevel, labels.getString(Labels.PRODUCES));\r\n<br/>    +        markupDocBuilder.unorderedList(params.produces.stream()\r\n<br/>    +                .map(value -&gt; literalText(markupDocBuilder, value)).collect(Collectors.toList()));\r\n<br/>            return markupDocBuilder;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:04','2018-12-01 17:42:04','diff-ffd98570df0307e408ee2c9193a8c5f4-20181201174204','https://github.com/Swagger2Markup/swagger2markup/commit/5a00dde9124170085014a0cdde03bf0001f21525#diff-ffd98570df0307e408ee2c9193a8c5f4','/var/www/QARefactorings/app/webroot/files/diff-ffd98570df0307e408ee2c9193a8c5f4-20181201174204/a.txt','/var/www/QARefactorings/app/webroot/files/diff-ffd98570df0307e408ee2c9193a8c5f4-20181201174204/b.txt','L37','R56','S'),(927,2,1,5,'<p>\r\n<br/>            if (CollectionUtils.isNotEmpty(produces)) {\r\n<br/>                buildSectionTitle(PRODUCES, docBuilder);\r\n<br/>                docBuilder.newLine();\r\n<br/>    -            for (String produce : produces) {\r\n<br/>    -                docBuilder.unorderedListItem(literalText(produce));\r\n<br/>    -            }\r\n<br/>                docBuilder.newLine();\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            if (CollectionUtils.isNotEmpty(produces)) {\r\n<br/>                buildSectionTitle(PRODUCES, docBuilder);\r\n<br/>                docBuilder.newLine();\r\n<br/>    +            produces.forEach(produce -&gt; docBuilder.unorderedListItem(literalText(produce)));\r\n<br/>                docBuilder.newLine();\r\n<br/>            }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:06','2018-12-01 17:42:06','diff-b2371b91ec873932df80f1e8da819b19-20181201174206','https://github.com/Swagger2Markup/swagger2markup/commit/551aeed83574c8179f912841c92d3fdd59e51005#diff-b2371b91ec873932df80f1e8da819b19','/var/www/QARefactorings/app/webroot/files/diff-b2371b91ec873932df80f1e8da819b19-20181201174206/a.txt','/var/www/QARefactorings/app/webroot/files/diff-b2371b91ec873932df80f1e8da819b19-20181201174206/b.txt','L565','R568','S'),(928,7,1,5,'<p>@Override\r\n<br>            protected Iterable getChoices(CommandSource source) {\r\n<br>    -            return Iterables.transform(this.game.getRegistry().getAllOf(this.catalogType), new Function() {\r\n<br>    -                @Nullable\r\n<br>    -                @Override\r\n<br>    -                public String apply(@Nullable T input) {\r\n<br>    -                    return input == null ? null : input.getId(); // TODO: ids or names?\r\n<br>    -                }\r\n<br>    -            });\r\n<br>            }\r\n<br>    <br></p>',NULL,'<p>@Override\r\n<br>            protected Iterable getChoices(CommandSource source) {\r\n<br>    +            return this.game.getRegistry().getAllOf(this.catalogType).stream()\r\n<br>    +                .map(input -&gt; {\r\n<br>    +                return input == null ? null : input.getId(); // TODO: ids or names?\r\n<br>    +                })\r\n<br>    +                .collect(Collectors.toList());\r\n<br>            }\r\n<br>    <br></p>',NULL,'2018-12-01 17:42:08','2018-12-01 19:46:58','diff-bd123d476b4046fba0c04ed1536a5725-20181201174208','https://github.com/SpongePowered/SpongeAPI/commit/20bad1be5c4b80598d820b4c937c6390d0b0384b#diff-bd123d476b4046fba0c04ed1536a5725','/var/www/QARefactorings/app/webroot/files/diff-bd123d476b4046fba0c04ed1536a5725-20181201174208/a.txt','/var/www/QARefactorings/app/webroot/files/diff-bd123d476b4046fba0c04ed1536a5725-20181201174208/b.txt','L1132','R1127','S'),(929,3,1,5,'<p>\r\n<br/>        private Optional&lt;DataView&gt; getUnsafeView(DataQuery path) {\r\n<br/>    -        Optional&lt;Object&gt; val = get(path);\r\n<br/>    -        if (val.isPresent()) {\r\n<br/>    -            if (val.get() instanceof DataView) {\r\n<br/>    -                return Optional.of((DataView) val.get());\r\n<br/>    -            }\r\n<br/>    -        }\r\n<br/>    -        return Optional.empty();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        private Optional&lt;DataView&gt; getUnsafeView(DataQuery path) {\r\n<br/>    +        return get(path).filter(obj -&gt; obj instanceof DataView).map(obj -&gt; (DataView) obj);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:17','2018-12-01 17:42:17','diff-16b47531aa190de6100123b8f68582a2-20181201174217','https://github.com/SpongePowered/SpongeAPI/commit/a7df949cd20b17fd10cd1543173a7d6b86ef08c3#diff-16b47531aa190de6100123b8f68582a2','/var/www/QARefactorings/app/webroot/files/diff-16b47531aa190de6100123b8f68582a2-20181201174217/a.txt','/var/www/QARefactorings/app/webroot/files/diff-16b47531aa190de6100123b8f68582a2-20181201174217/b.txt','L511','R509','S'),(930,3,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public Optional&lt;DataView&gt; getView(DataQuery path) {\r\n<br/>    -        Optional&lt;Object&gt; val = get(path);\r\n<br/>    -        if (val.isPresent()) {\r\n<br/>    -            if (val.get() instanceof DataView) {\r\n<br/>    -                return Optional.of((DataView) val.get());\r\n<br/>    -            }\r\n<br/>    -        }\r\n<br/>    -        return Optional.empty();\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public Optional&lt;DataView&gt; getView(DataQuery path) {\r\n<br/>    +        return get(path).filter(obj -&gt; obj instanceof DataView).map(obj -&gt; (DataView) obj);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:19','2018-12-01 17:42:19','diff-16b47531aa190de6100123b8f68582a2-20181201174219','https://github.com/SpongePowered/SpongeAPI/commit/a7df949cd20b17fd10cd1543173a7d6b86ef08c3#diff-16b47531aa190de6100123b8f68582a2','/var/www/QARefactorings/app/webroot/files/diff-16b47531aa190de6100123b8f68582a2-20181201174219/a.txt','/var/www/QARefactorings/app/webroot/files/diff-16b47531aa190de6100123b8f68582a2-20181201174219/b.txt','L458','R463','S'),(931,2,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public DataContainer copy() {\r\n<br/>            final DataContainer container = new MemoryDataContainer();\r\n<br/>    -        for (DataQuery query : getKeys(false)) {\r\n<br/>    -            container.set(query, get(query).get());\r\n<br/>    -        }\r\n<br/>            return container;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public DataContainer copy() {\r\n<br/>            final DataContainer container = new MemoryDataContainer();\r\n<br/>    +        getKeys(false).stream()\r\n<br/>    +                .forEach(query -&gt;\r\n<br/>    +                        get(query).ifPresent(obj -&gt;\r\n<br/>    +                                container.set(query, obj)\r\n<br/>    +                        )\r\n<br/>    +        );\r\n<br/>            return container;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:20','2018-12-01 17:42:21','diff-16b47531aa190de6100123b8f68582a2-20181201174220','https://github.com/SpongePowered/SpongeAPI/commit/a7df949cd20b17fd10cd1543173a7d6b86ef08c3#diff-16b47531aa190de6100123b8f68582a2','/var/www/QARefactorings/app/webroot/files/diff-16b47531aa190de6100123b8f68582a2-20181201174220/a.txt','/var/www/QARefactorings/app/webroot/files/diff-16b47531aa190de6100123b8f68582a2-20181201174220/b.txt','L938','R794','S'),(932,1,1,5,'<p>\r\n<br/>        @Override public void onBindViewHolder(final CityViewHolder holder, final int position) {\r\n<br/>            holder.itemCity.setText(dataList.get(position));\r\n<br/>    -        holder.cardView.setOnClickListener(new View.OnClickListener() {\r\n<br/>    -            @Override public void onClick(View v) {\r\n<br/>    -                mOnItemClickListener.onItemClick(v, position);\r\n<br/>    -            }\r\n<br/>    -        });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override public void onBindViewHolder(final CityViewHolder holder, final int position) {\r\n<br/>            holder.itemCity.setText(dataList.get(position));\r\n<br/>    +        holder.cardView.setOnClickListener(v -&gt; mOnItemClickListener.onItemClick(v, position));\r\n<br/>    +        //showItemAnim(holder.itemView,position);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:22','2018-12-01 17:42:23','diff-c47a8aaa39b2de5a82d5c2d4ee66e102-20181201174222','https://github.com/xcc3641/SeeWeather/commit/65e21cf7134a546999460297c957d97c7c801deb#diff-c47a8aaa39b2de5a82d5c2d4ee66e102','/var/www/QARefactorings/app/webroot/files/diff-c47a8aaa39b2de5a82d5c2d4ee66e102-20181201174222/a.txt','/var/www/QARefactorings/app/webroot/files/diff-c47a8aaa39b2de5a82d5c2d4ee66e102-20181201174222/b.txt','L32','R39','S'),(933,1,1,5,'<p>\r\n<br/>         */\r\n<br/>        private void queryProvinces() {\r\n<br/>            collapsingToolbarLayout.setTitle(\"éæ©çä»½\");\r\n<br/>    -        Observer&lt;Province&gt; observer = new Observer&lt;Province&gt;() {\r\n<br/>    -            @Override\r\n<br/>    -            public void onCompleted() {\r\n<br/>                    currentLevel = LEVEL_PROVINCE;\r\n<br/>                    mAdapter.notifyDataSetChanged();\r\n<br/>                    mProgressBar.setVisibility(View.GONE);\r\n<br/>    -                //PLog.i(TAG,\"çä»½\");\r\n<br/>    -            }\r\n<br/>    -\r\n<br/>    -            @Override\r\n<br/>    -            public void onError(Throwable e) {\r\n<br/>    -\r\n<br/>                }\r\n<br/>    -            @Override\r\n<br/>    -            public void onNext(Province province) {\r\n<br/>    -                //å¨è¿éå RV çå¨ç»ææ ä½¿ç¨ Item çæ´æ°\r\n<br/>    -                dataList.add(province.ProName);\r\n<br/>    -                //PLog.i(TAG,province.ProSort+\"\");\r\n<br/>    -                //mAdapter.notifyItemInserted(province.ProSort-1);\r\n<br/>    -\r\n<br/>    -            }\r\n<br/>    -        };\r\n<br/>    -\r\n<br/>    -        Observable.defer(() -&gt; {\r\n<br/>    -            provincesList = mWeatherDB.loadProvinces(mDBManager.getDatabase());\r\n<br/>    -            dataList.clear();\r\n<br/>    -            mAdapter.notifyDataSetChanged();\r\n<br/>    -            return Observable.from(provincesList);\r\n<br/>    -        }).subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread()).subscribe(observer);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>         */\r\n<br/>        private void queryProvinces() {\r\n<br/>            collapsingToolbarLayout.setTitle(\"éæ©çä»½\");\r\n<br/>    +        Observable.defer(() -&gt; {\r\n<br/>    +            provincesList = mWeatherDB.loadProvinces(mDBManager.getDatabase());\r\n<br/>    +            dataList.clear();\r\n<br/>    +            return Observable.from(provincesList);\r\n<br/>    +        }).subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread()).subscribe(\r\n<br/>    +            province -&gt; dataList.add(province.ProName), throwable -&gt; PLog.e(TAG, throwable.toString()), () -&gt; {\r\n<br/>                    currentLevel = LEVEL_PROVINCE;\r\n<br/>                    mAdapter.notifyDataSetChanged();\r\n<br/>                    mProgressBar.setVisibility(View.GONE);\r\n<br/>                }\r\n<br/>    +        );\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:24','2018-12-01 17:42:24','diff-8331b149df69a1594ececf1d1fa0d287-20181201174224','https://github.com/xcc3641/SeeWeather/commit/65e21cf7134a546999460297c957d97c7c801deb#diff-8331b149df69a1594ececf1d1fa0d287','/var/www/QARefactorings/app/webroot/files/diff-8331b149df69a1594ececf1d1fa0d287-20181201174224/a.txt','/var/www/QARefactorings/app/webroot/files/diff-8331b149df69a1594ececf1d1fa0d287-20181201174224/b.txt','L127','R143','N'),(934,1,1,5,'<p>\r\n<br/>        private void _log(String logMsg) {\r\n<br/>            _logs.add(0, String.format(logMsg + \" [MainThread: %b]\", getMainLooper() == myLooper()));\r\n<br/>            // You can only do below stuff on main thread.\r\n<br/>    -        new Handler(getMainLooper()).post(new Runnable() {\r\n<br/>    -\r\n<br/>    -            @Override\r\n<br/>    -            public void run() {\r\n<br/>    -                _adapter.clear();\r\n<br/>    -                _adapter.addAll(_logs);\r\n<br/>    -            }\r\n<br/>            });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        private void _log(String logMsg) {\r\n<br/>            _logs.add(0, String.format(logMsg + \" [MainThread: %b]\", getMainLooper() == myLooper()));\r\n<br/>            // You can only do below stuff on main thread.\r\n<br/>    +        new Handler(getMainLooper()).post(() -&gt; {\r\n<br/>    +            _adapter.clear();\r\n<br/>    +            _adapter.addAll(_logs);\r\n<br/>            });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:26','2018-12-01 17:42:27','diff-596a76be3d75c06208d9cf419e05c61d-20181201174226','https://github.com/kaushikgopal/RxJava-Android-Samples/commit/a1cd646cf546e9ea773882c9af2f16886641cc30#diff-596a76be3d75c06208d9cf419e05c61d','/var/www/QARefactorings/app/webroot/files/diff-596a76be3d75c06208d9cf419e05c61d-20181201174226/a.txt','/var/www/QARefactorings/app/webroot/files/diff-596a76be3d75c06208d9cf419e05c61d-20181201174226/b.txt','L190','R200','S'),(935,5,1,5,'<p>\r\n<br/>            _subscriptions.add(//\r\n<br/>                  Observable.interval(INITIAL_DELAY, POLLING_INTERVAL, TimeUnit.MILLISECONDS)\r\n<br/>    -                    .map(new Func1&lt;Long, String&gt;() {\r\n<br/>    -                        @Override\r\n<br/>    -                        public String call(Long heartBeat) {\r\n<br/>    -                            return _doNetworkCallAndGetStringResult(heartBeat);\r\n<br/>    -                        }\r\n<br/>    -                    }).take(pollCount)\r\n<br/>    -                    .doOnSubscribe(new Action0() {\r\n<br/>    -                        @Override\r\n<br/>    -                        public void call() {\r\n<br/>    -                            _log(String.format(\"Start simple polling - %s\", _counter));\r\n<br/>    -                        }\r\n<br/>    -                    })\r\n<br/>    -                    .subscribe(new Action1&lt;String&gt;() {\r\n<br/>    -                        @Override\r\n<br/>    -                        public void call(String taskName) {\r\n<br/>    -                            _log(String.format(Locale.US, \"Executing polled task [%s] now time : [xx:%02d]\",\r\n<br/>    -                                  taskName, _getSecondHand()));\r\n<br/>    -                        }\r\n<br/>                        })\r\n<br/>            );\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            _subscriptions.add(//\r\n<br/>                  Observable.interval(INITIAL_DELAY, POLLING_INTERVAL, TimeUnit.MILLISECONDS)\r\n<br/>    +                    .map(this::_doNetworkCallAndGetStringResult)//\r\n<br/>    +                    .take(pollCount)\r\n<br/>    +                    .doOnSubscribe(() -&gt;\r\n<br/>    +                          _log(String.format(\"Start simple polling - %s\", _counter)))\r\n<br/>    +                    .subscribe(taskName -&gt; {\r\n<br/>    +                        _log(String.format(Locale.US, \"Executing polled task [%s] now time : [xx:%02d]\",\r\n<br/>    +                              taskName, _getSecondHand()));\r\n<br/>                        })\r\n<br/>            );\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:28','2018-12-01 17:42:29','diff-b70350cbaa584e955f89a1c444a466c1-20181201174228','https://github.com/kaushikgopal/RxJava-Android-Samples/commit/a1cd646cf546e9ea773882c9af2f16886641cc30#diff-b70350cbaa584e955f89a1c444a466c1','/var/www/QARefactorings/app/webroot/files/diff-b70350cbaa584e955f89a1c444a466c1-20181201174228/a.txt','/var/www/QARefactorings/app/webroot/files/diff-b70350cbaa584e955f89a1c444a466c1-20181201174228/b.txt','L80','R90','S'),(936,1,1,5,'<p>\r\n<br/>            _subscriptions//\r\n<br/>    -              .add(tapEventEmitter.subscribe(new Action1&lt;Object&gt;() {\r\n<br/>    -                  @Override\r\n<br/>    -                  public void call(Object event) {\r\n<br/>    -                      if (event instanceof RxBusDemoFragment.TapEvent) {\r\n<br/>    -                          _showTapText();\r\n<br/>    -                      }\r\n<br/>                      }\r\n<br/>                  }));\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            _subscriptions//\r\n<br/>    +              .add(tapEventEmitter.subscribe(event -&gt; {\r\n<br/>    +                  if (event instanceof RxBusDemoFragment.TapEvent) {\r\n<br/>    +                      _showTapText();\r\n<br/>                      }\r\n<br/>                  }));\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:31','2018-12-01 17:42:31','diff-325ebb5b674954b41de7b2f1caaac600-20181201174231','https://github.com/kaushikgopal/RxJava-Android-Samples/commit/a1cd646cf546e9ea773882c9af2f16886641cc30#diff-325ebb5b674954b41de7b2f1caaac600','/var/www/QARefactorings/app/webroot/files/diff-325ebb5b674954b41de7b2f1caaac600-20181201174231/a.txt','/var/www/QARefactorings/app/webroot/files/diff-325ebb5b674954b41de7b2f1caaac600-20181201174231/b.txt','L56','R59','S'),(937,13,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public Observable&lt;byte[]&gt; writeDescriptor(UUID serviceUuid, UUID characteristicUuid, UUID descriptorUuid, byte[] data) {\r\n<br/>    -        discoverServices()\r\n<br/>                    .flatMap(rxBleDeviceServices -&gt; rxBleDeviceServices.getDescriptor(serviceUuid, characteristicUuid, descriptorUuid))\r\n<br/>    -                .map(bluetoothGattDescriptor -&gt; bluetoothGattDescriptor.setValue(data)).subscribe();\r\n<br/>    -        return Observable.just(data);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public Observable&lt;byte[]&gt; writeDescriptor(UUID serviceUuid, UUID characteristicUuid, UUID descriptorUuid, byte[] data) {\r\n<br/>    +        return discoverServices()\r\n<br/>                    .flatMap(rxBleDeviceServices -&gt; rxBleDeviceServices.getDescriptor(serviceUuid, characteristicUuid, descriptorUuid))\r\n<br/>    +                .map(bluetoothGattDescriptor -&gt; bluetoothGattDescriptor.setValue(data)).flatMap(ignored -&gt; Observable.just(data));\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:33','2018-12-01 17:42:33','diff-e16a3667ed79c289ca17f768878f1115-20181201174233','https://github.com/Polidea/RxAndroidBle/commit/4f8b60d952305335224b50ce00c0e2c25e23e872#diff-e16a3667ed79c289ca17f768878f1115','/var/www/QARefactorings/app/webroot/files/diff-e16a3667ed79c289ca17f768878f1115-20181201174233/a.txt','/var/www/QARefactorings/app/webroot/files/diff-e16a3667ed79c289ca17f768878f1115-20181201174233/b.txt','L61','R67','N'),(938,1,1,5,'<p>\r\n<br/>        @NonNull\r\n<br/>        private Observable&lt;byte[]&gt; setupCharacteristicNotification(BluetoothGattDescriptor bluetoothGattDescriptor, boolean enabled) {\r\n<br/>    -        final BluetoothGattCharacteristic bluetoothGattCharacteristic = bluetoothGattDescriptor.getCharacteristic();\r\n<br/>    -        return bluetoothGatt.setCharacteristicNotification(bluetoothGattCharacteristic, enabled)\r\n<br/>    -                ? writeDescriptor(bluetoothGattDescriptor, enabled ? ENABLE_NOTIFICATION_VALUE : DISABLE_NOTIFICATION_VALUE)\r\n<br/>    -                : Observable.error(new BleCannotSetCharacteristicNotificationException(bluetoothGattCharacteristic));\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @NonNull\r\n<br/>        private Observable&lt;byte[]&gt; setupCharacteristicNotification(BluetoothGattDescriptor bluetoothGattDescriptor, boolean enabled) {\r\n<br/>    +        final BluetoothGattCharacteristic characteristic = bluetoothGattDescriptor.getCharacteristic();\r\n<br/>    +\r\n<br/>    +        if (bluetoothGatt.setCharacteristicNotification(characteristic, enabled)) {\r\n<br/>    +            return writeDescriptor(bluetoothGattDescriptor, enabled ? ENABLE_NOTIFICATION_VALUE : DISABLE_NOTIFICATION_VALUE)\r\n<br/>    +                    .onErrorResumeNext(throwable -&gt; error(new BleCannotSetCharacteristicNotificationException(characteristic)));\r\n<br/>    +        } else {\r\n<br/>    +            return error(new BleCannotSetCharacteristicNotificationException(characteristic));\r\n<br/>    +        }\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:34','2018-12-01 17:42:35','diff-70127ee1ccd288fc48bab1e941023361-20181201174234','https://github.com/Polidea/RxAndroidBle/commit/3ab592ad3366e3961e768acf02802c2c16ca7911#diff-70127ee1ccd288fc48bab1e941023361','/var/www/QARefactorings/app/webroot/files/diff-70127ee1ccd288fc48bab1e941023361-20181201174234/a.txt','/var/www/QARefactorings/app/webroot/files/diff-70127ee1ccd288fc48bab1e941023361-20181201174234/b.txt','L129','R142','S'),(939,1,1,5,'<p>\r\n<br/>        @Provides @NonNull @Singleton\r\n<br/>        public HttpLoggingInterceptor provideHttpLoggingInterceptor() {\r\n<br/>    -        HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor();\r\n<br/>            httpLoggingInterceptor.setLevel(BuildConfig.DEBUG ? BODY : NONE);\r\n<br/>            return httpLoggingInterceptor;\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Provides @NonNull @Singleton\r\n<br/>        public HttpLoggingInterceptor provideHttpLoggingInterceptor() {\r\n<br/>    +        HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor(message -&gt; Timber.d(message));\r\n<br/>            httpLoggingInterceptor.setLevel(BuildConfig.DEBUG ? BODY : NONE);\r\n<br/>            return httpLoggingInterceptor;\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:36','2018-12-01 17:42:37','diff-a2afc5fdcf3469676fe934fb27ff465a-20181201174236','https://github.com/artem-zinnatullin/qualitymatters/commit/7d1b1e2e8b5aeddf75ab79a607c9c0484ddb20e9#diff-a2afc5fdcf3469676fe934fb27ff465a','/var/www/QARefactorings/app/webroot/files/diff-a2afc5fdcf3469676fe934fb27ff465a-20181201174236/a.txt','/var/www/QARefactorings/app/webroot/files/diff-a2afc5fdcf3469676fe934fb27ff465a-20181201174236/b.txt','L26','R33','S'),(940,1,1,5,'<p>\r\n<br/>        @Test\r\n<br/>        public void serializeAndDeserialize() {\r\n<br/>    -        HardSoftBigDecimalScore input = HardSoftBigDecimalScore.valueOf(\r\n<br/>    -                new BigDecimal(\"-12.3\"), new BigDecimal(\"3400.5\"));\r\n<br/>    -        PlannerTestUtils.serializeAndDeserializeWithAll(input,\r\n<br/>    -                new PlannerTestUtils.OutputAsserter&lt;HardSoftBigDecimalScore&gt;() {\r\n<br/>    -                    @Override\r\n<br/>    -                    public void assertOutput(HardSoftBigDecimalScore output) {\r\n<br/>    -                        assertEquals(new BigDecimal(\"-12.3\"), output.getHardScore());\r\n<br/>    -                        assertEquals(new BigDecimal(\"3400.5\"), output.getSoftScore());\r\n<br/>    -                    }\r\n<br/>                    }\r\n<br/>            );\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Test\r\n<br/>        public void serializeAndDeserialize() {\r\n<br/>    +        PlannerTestUtils.serializeAndDeserializeWithAll(\r\n<br/>    +                HardSoftBigDecimalScore.valueOfInitialized(new BigDecimal(\"-12.3\"), new BigDecimal(\"3400.5\")),\r\n<br/>    +                output -&gt; {\r\n<br/>    +                    assertEquals(0, output.getInitScore());\r\n<br/>    +                    assertEquals(new BigDecimal(\"-12.3\"), output.getHardScore());\r\n<br/>    +                    assertEquals(new BigDecimal(\"3400.5\"), output.getSoftScore());\r\n<br/>    +                }\r\n<br/>    +        );\r\n<br/>    +        PlannerTestUtils.serializeAndDeserializeWithAll(\r\n<br/>    +                HardSoftBigDecimalScore.valueOf(-7, new BigDecimal(\"-12.3\"), new BigDecimal(\"3400.5\")),\r\n<br/>    +                output -&gt; {\r\n<br/>    +                    assertEquals(-7, output.getInitScore());\r\n<br/>    +                    assertEquals(new BigDecimal(\"-12.3\"), output.getHardScore());\r\n<br/>    +                    assertEquals(new BigDecimal(\"3400.5\"), output.getSoftScore());\r\n<br/>                    }\r\n<br/>            );\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:38','2018-12-01 17:42:39','diff-444b69fe4a1cc121a1333d7784704f5e-20181201174238','https://github.com/kiegroup/optaplanner/commit/2946d661959a3209a85c03ae000abacee8f88422#diff-444b69fe4a1cc121a1333d7784704f5e','/var/www/QARefactorings/app/webroot/files/diff-444b69fe4a1cc121a1333d7784704f5e-20181201174238/a.txt','/var/www/QARefactorings/app/webroot/files/diff-444b69fe4a1cc121a1333d7784704f5e-20181201174238/b.txt','L125','R193','S'),(941,2,1,5,'<p>\r\n<br/>        @Override\r\n<br/>    -    public Object getInstance() {\r\n<br/>    -        return instance;\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>    +    public void printSetup(StringBuilder sb) {\r\n<br/>    +        sb.append(String.format(\"        //%s%n\", instanceToString));\r\n<br/>    +        fields.forEach(f -&gt; f.print(sb));\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:41','2018-12-01 17:42:41','diff-f86139d937eedc85f31b14b05c065f63-20181201174241','https://github.com/kiegroup/optaplanner/commit/08ba3fad475d86cb639ff16d23b0188cf20f99f5#diff-f86139d937eedc85f31b14b05c065f63','/var/www/QARefactorings/app/webroot/files/diff-f86139d937eedc85f31b14b05c065f63-20181201174241/a.txt','/var/www/QARefactorings/app/webroot/files/diff-f86139d937eedc85f31b14b05c065f63-20181201174241/b.txt','L159','R178','S'),(942,1,1,5,'<p>\r\n<br/>    -        SelectionProbabilityWeightFactory&lt;DummyMove&gt; probabilityWeightFactory = new SelectionProbabilityWeightFactory&lt;DummyMove&gt;() {\r\n<br/>    -            public double createProbabilityWeight(ScoreDirector scoreDirector, DummyMove move) {\r\n<br/>    -                if (move.getCode().equals(\"e1\")) {\r\n<br/>                        return 1000.0;\r\n<br/>    -                } else if (move.getCode().equals(\"e2\")) {\r\n<br/>                        return 200.0;\r\n<br/>    -                } else if (move.getCode().equals(\"e3\")) {\r\n<br/>                        return 30.0;\r\n<br/>    -                } else if (move.getCode().equals(\"e4\")) {\r\n<br/>                        return 4.0;\r\n<br/>    -                } else {\r\n<br/>                        throw new IllegalStateException(\"Unknown move (\" + move + \").\");\r\n<br/>    -                }\r\n<br/>                }\r\n<br/>            };\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>    +        SelectionProbabilityWeightFactory&lt;TestdataSolution, DummyMove&gt; probabilityWeightFactory\r\n<br/>    +                = (scoreDirector, move) -&gt; {\r\n<br/>    +            switch (move.getCode()) {\r\n<br/>    +                case \"e1\":\r\n<br/>                        return 1000.0;\r\n<br/>    +                case \"e2\":\r\n<br/>                        return 200.0;\r\n<br/>    +                case \"e3\":\r\n<br/>                        return 30.0;\r\n<br/>    +                case \"e4\":\r\n<br/>                        return 4.0;\r\n<br/>    +                default:\r\n<br/>                        throw new IllegalStateException(\"Unknown move (\" + move + \").\");\r\n<br/>                }\r\n<br/>            };\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:46','2018-12-01 17:42:46','diff-8674b26e82b057866d6ec76cfbadb8fe-20181201174246','https://github.com/kiegroup/optaplanner/commit/0c371e68d7e694e9b1ec472329a9c6a02ee07e24#diff-8674b26e82b057866d6ec76cfbadb8fe','/var/www/QARefactorings/app/webroot/files/diff-8674b26e82b057866d6ec76cfbadb8fe-20181201174246/a.txt','/var/www/QARefactorings/app/webroot/files/diff-8674b26e82b057866d6ec76cfbadb8fe-20181201174246/b.txt','L41','R58','S'),(943,1,1,5,'<p>\r\n<br/>    -        SelectionSorter&lt;TestdataSolution, TestdataValue&gt; sorter = new SelectionSorter&lt;TestdataSolution, TestdataValue&gt;() {\r\n<br/>    -            public void sort(ScoreDirector scoreDirector, List&lt;TestdataValue&gt; selectionList) {\r\n<br/>    -                Collections.sort(selectionList, new Comparator&lt;TestdataValue&gt;() {\r\n<br/>    -                    public int compare(TestdataValue a, TestdataValue b) {\r\n<br/>    -                        return a.getCode().compareTo(b.getCode());\r\n<br/>    -                    }\r\n<br/>    -                });\r\n<br/>    -            }\r\n<br/>    -        };\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>    +        SelectionSorter&lt;TestdataSolution, TestdataValue&gt; sorter = (scoreDirector, selectionList)\r\n<br/>    +                -&gt; Collections.sort(selectionList, (a, b) -&gt; a.getCode().compareTo(b.getCode()));\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:48','2018-12-01 17:42:48','diff-786d5dfd7f5e10d3aebe3ecd4dca3070-20181201174248','https://github.com/kiegroup/optaplanner/commit/0c371e68d7e694e9b1ec472329a9c6a02ee07e24#diff-786d5dfd7f5e10d3aebe3ecd4dca3070','/var/www/QARefactorings/app/webroot/files/diff-786d5dfd7f5e10d3aebe3ecd4dca3070-20181201174248/a.txt','/var/www/QARefactorings/app/webroot/files/diff-786d5dfd7f5e10d3aebe3ecd4dca3070-20181201174248/b.txt','L62','R65','S'),(944,1,1,5,'<p>\r\n<br/>        public void deleteProcess(final CloudProcess process) {\r\n<br/>            logger.info(\"Scheduling delete of process ({}).\", process);\r\n<br/>    -        doProblemFactChange(new ProblemFactChange() {\r\n<br/>    -            public void doChange(ScoreDirector scoreDirector) {\r\n<br/>    -                CloudBalance cloudBalance = (CloudBalance) scoreDirector.getWorkingSolution();\r\n<br/>    -                // Remove the planning entity itself\r\n<br/>    -                for (Iterator&lt;CloudProcess&gt; it = cloudBalance.getProcessList().iterator(); it.hasNext(); ) {\r\n<br/>    -                    CloudProcess workingProcess = it.next();\r\n<br/>    -                    if (Objects.equals(workingProcess, process)) {\r\n<br/>    -                        scoreDirector.beforeEntityRemoved(workingProcess);\r\n<br/>    -                        it.remove(); // remove from list\r\n<br/>    -                        scoreDirector.afterEntityRemoved(workingProcess);\r\n<br/>    -                        break;\r\n<br/>    -                    }\r\n<br/>                    }\r\n<br/>    -                scoreDirector.triggerVariableListeners();\r\n<br/>                }\r\n<br/>            });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        public void deleteProcess(final CloudProcess process) {\r\n<br/>            logger.info(\"Scheduling delete of process ({}).\", process);\r\n<br/>    +        doProblemFactChange(scoreDirector -&gt; {\r\n<br/>    +            CloudBalance cloudBalance = scoreDirector.getWorkingSolution();\r\n<br/>    +            // Remove the planning entity itself\r\n<br/>    +            for (Iterator&lt;CloudProcess&gt; it = cloudBalance.getProcessList().iterator(); it.hasNext(); ) {\r\n<br/>    +                CloudProcess workingProcess = it.next();\r\n<br/>    +                if (Objects.equals(workingProcess, process)) {\r\n<br/>    +                    scoreDirector.beforeEntityRemoved(workingProcess);\r\n<br/>    +                    it.remove(); // remove from list\r\n<br/>    +                    scoreDirector.afterEntityRemoved(workingProcess);\r\n<br/>    +                    break;\r\n<br/>                    }\r\n<br/>                }\r\n<br/>    +            scoreDirector.triggerVariableListeners();\r\n<br/>            });\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:50','2018-12-01 17:42:50','diff-c00b643f2fa9fd24f5e41df33667dab3-20181201174250','https://github.com/kiegroup/optaplanner/commit/84c379549cbf3c84948bec3e44452749582f887e#diff-c00b643f2fa9fd24f5e41df33667dab3','/var/www/QARefactorings/app/webroot/files/diff-c00b643f2fa9fd24f5e41df33667dab3-20181201174250/a.txt','/var/www/QARefactorings/app/webroot/files/diff-c00b643f2fa9fd24f5e41df33667dab3-20181201174250/b.txt','L314','R326','S'),(945,1,1,5,'<p>\r\n<br/>        public RxBleConnectionImpl(RxBleRadio rxBleRadio, RxBleGattCallback gattCallback, BluetoothGatt bluetoothGatt) {\r\n<br/>    -\r\n<br/>            this.rxBleRadio = rxBleRadio;\r\n<br/>            this.gattCallback = gattCallback;\r\n<br/>            this.bluetoothGatt = bluetoothGatt;\r\n<br/>    @@ -92,59 +88,64 @@ public RxBleConnectionImpl(RxBleRadio rxBleRadio, RxBleGattCallback gattCallback\r\n<br/>                    return availableObservable;\r\n<br/>                }\r\n<br/>    -            final Observable&lt;Observable&lt;byte[]&gt;&gt; newObservable = createCharacteristicNotificationObservable(characteristicUuid);\r\n<br/>                notificationObservableMap.put(characteristicUuid, newObservable);\r\n<br/>    -\r\n<br/>                return newObservable;\r\n<br/>            }\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        public RxBleConnectionImpl(RxBleRadio rxBleRadio, RxBleGattCallback gattCallback, BluetoothGatt bluetoothGatt) {\r\n<br/>            this.rxBleRadio = rxBleRadio;\r\n<br/>            this.gattCallback = gattCallback;\r\n<br/>            this.bluetoothGatt = bluetoothGatt;\r\n<br/>    @@ -92,59 +88,64 @@ public RxBleConnectionImpl(RxBleRadio rxBleRadio, RxBleGattCallback gattCallback\r\n<br/>                    return availableObservable;\r\n<br/>                }\r\n<br/>    +            final Observable&lt;Observable&lt;byte[]&gt;&gt; newObservable = createCharacteristicNotificationObservable(characteristicUuid)\r\n<br/>    +                    .doOnUnsubscribe(() -&gt; dismissCharacteristicNotification(characteristicUuid))\r\n<br/>    +                    .cache(1)\r\n<br/>    +                    .share();\r\n<br/>                notificationObservableMap.put(characteristicUuid, newObservable);\r\n<br/>                return newObservable;\r\n<br/>            }\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:52','2018-12-01 17:42:52','diff-70127ee1ccd288fc48bab1e941023361-20181201174252','https://github.com/Polidea/RxAndroidBle/commit/ffce6eb924bdc95ce035c46be2500ebac125262f#diff-70127ee1ccd288fc48bab1e941023361','/var/www/QARefactorings/app/webroot/files/diff-70127ee1ccd288fc48bab1e941023361-20181201174252/a.txt','/var/www/QARefactorings/app/webroot/files/diff-70127ee1ccd288fc48bab1e941023361-20181201174252/b.txt','L46','R99','S'),(946,13,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public Observable&lt;byte[]&gt; writeDescriptor(UUID serviceUuid, UUID characteristicUuid, UUID descriptorUuid, byte[] data) {\r\n<br/>    -        discoverServices()\r\n<br/>                    .flatMap(rxBleDeviceServices -&gt; rxBleDeviceServices.getDescriptor(serviceUuid, characteristicUuid, descriptorUuid))\r\n<br/>    -                .map(bluetoothGattDescriptor -&gt; bluetoothGattDescriptor.setValue(data)).subscribe();\r\n<br/>    -        return Observable.just(data);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public Observable&lt;byte[]&gt; writeDescriptor(UUID serviceUuid, UUID characteristicUuid, UUID descriptorUuid, byte[] data) {\r\n<br/>    +        return discoverServices()\r\n<br/>                    .flatMap(rxBleDeviceServices -&gt; rxBleDeviceServices.getDescriptor(serviceUuid, characteristicUuid, descriptorUuid))\r\n<br/>    +                .map(bluetoothGattDescriptor -&gt; bluetoothGattDescriptor.setValue(data)).flatMap(ignored -&gt; Observable.just(data));\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:53','2018-12-01 17:42:54','diff-e16a3667ed79c289ca17f768878f1115-20181201174253','https://github.com/Polidea/RxAndroidBle/commit/f918c3fcb035201f10f0c49cad11384fc93f7f2a#diff-e16a3667ed79c289ca17f768878f1115','/var/www/QARefactorings/app/webroot/files/diff-e16a3667ed79c289ca17f768878f1115-20181201174253/a.txt','/var/www/QARefactorings/app/webroot/files/diff-e16a3667ed79c289ca17f768878f1115-20181201174253/b.txt','L61','R67','N'),(947,13,1,5,'<p>\r\n<br/>        @Override\r\n<br/>        public Observable&lt;byte[]&gt; writeCharacteristic(UUID characteristicUuid, byte[] data) {\r\n<br/>    -        getCharacteristic(characteristicUuid).map(characteristic -&gt; characteristic.setValue(data)).subscribe();\r\n<br/>    -        return Observable.just(data);\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @Override\r\n<br/>        public Observable&lt;byte[]&gt; writeCharacteristic(UUID characteristicUuid, byte[] data) {\r\n<br/>    +        return getCharacteristic(characteristicUuid).map(characteristic -&gt; characteristic.setValue(data)).flatMap(ignored -&gt; Observable.just(data));\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:55','2018-12-01 17:42:55','diff-e16a3667ed79c289ca17f768878f1115-20181201174255','https://github.com/Polidea/RxAndroidBle/commit/f918c3fcb035201f10f0c49cad11384fc93f7f2a#diff-e16a3667ed79c289ca17f768878f1115','/var/www/QARefactorings/app/webroot/files/diff-e16a3667ed79c289ca17f768878f1115-20181201174255/a.txt','/var/www/QARefactorings/app/webroot/files/diff-e16a3667ed79c289ca17f768878f1115-20181201174255/b.txt','L48','R53','N'),(948,3,1,5,'<p>\r\n<br/>        @NonNull\r\n<br/>        private Observable&lt;RxBleScanResult&gt; createScanOperation(@Nullable UUID[] filterServiceUUIDs) {\r\n<br/>    -        return Observable.defer(() -&gt; Observable.from(getFilteredDevicesList(filterServiceUUIDs))\r\n<br/>                    .map(rxBleDevice -&gt; {\r\n<br/>                        RxBleDeviceMock rxBleDeviceMock = (RxBleDeviceMock) rxBleDevice;\r\n<br/>                        return convertToPublicScanResult(rxBleDeviceMock, rxBleDeviceMock.getRssi(), rxBleDeviceMock.getScanRecord());\r\n<br/>                    })\r\n<br/>                    .share());\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        @NonNull\r\n<br/>        private Observable&lt;RxBleScanResult&gt; createScanOperation(@Nullable UUID[] filterServiceUUIDs) {\r\n<br/>    +        return Observable.defer(() -&gt; Observable.from(discoverableDevices.values())\r\n<br/>    +                                                .filter(rxBleDevice -&gt; filterDevice(rxBleDevice, filterServiceUUIDs))\r\n<br/>                    .map(rxBleDevice -&gt; {\r\n<br/>                        RxBleDeviceMock rxBleDeviceMock = (RxBleDeviceMock) rxBleDevice;\r\n<br/>                        return convertToPublicScanResult(rxBleDeviceMock, rxBleDeviceMock.getRssi(), rxBleDeviceMock.getScanRecord());\r\n<br/>                    })\r\n<br/>                    .share());\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:42:59','2018-12-01 17:43:00','diff-5fa1ac0351dd354aeae7cd0e10312451-20181201174259','https://github.com/Polidea/RxAndroidBle/commit/f8e71662b7ec9fccefdd7ecd3a4cc5d7d6cf1bde#diff-5fa1ac0351dd354aeae7cd0e10312451','/var/www/QARefactorings/app/webroot/files/diff-5fa1ac0351dd354aeae7cd0e10312451-20181201174259/a.txt','/var/www/QARefactorings/app/webroot/files/diff-5fa1ac0351dd354aeae7cd0e10312451-20181201174259/b.txt','L250','R267','N'),(950,1,1,5,'<p>\r\n<br/>            final List&lt;Object&gt; valueList = Arrays.&lt;Object&gt;asList(values);\r\n<br/>    -        when(valueSelector.iterator(any())).thenAnswer(new Answer&lt;Iterator&lt;Object&gt;&gt;() {\r\n<br/>    -            @Override\r\n<br/>    -            public Iterator&lt;Object&gt; answer(InvocationOnMock invocation) throws Throwable {\r\n<br/>    -                return valueList.iterator();\r\n<br/>    -            }\r\n<br/>    -        });\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            final List&lt;Object&gt; valueList = Arrays.&lt;Object&gt;asList(values);\r\n<br/>    +        when(valueSelector.iterator(any())).thenAnswer(invocation -&gt; valueList.iterator());\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:43:13','2018-12-01 17:43:13','diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a-20181201174313','https://github.com/kiegroup/optaplanner/commit/e12ab0cc52d233ce908210a415ff0a0112a9a7bb#diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a','/var/www/QARefactorings/app/webroot/files/diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a-20181201174313/a.txt','/var/www/QARefactorings/app/webroot/files/diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a-20181201174313/b.txt','L131','R113','S'),(951,1,1,5,'<p>\r\n<br/>            original.setValueSet(valueSet);\r\n<br/>    -        Comparator&lt;TestdataSetBasedEntity&gt; entityComparator = new Comparator&lt;TestdataSetBasedEntity&gt;() {\r\n<br/>    -            @Override\r\n<br/>    -            public int compare(TestdataSetBasedEntity a, TestdataSetBasedEntity b) {\r\n<br/>    -                return b.getCode().compareTo(a.getCode()); // Reverse alphabetic\r\n<br/>    -            }\r\n<br/>            };\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            original.setValueSet(valueSet);\r\n<br/>    +        Comparator&lt;TestdataSetBasedEntity&gt; entityComparator = (a1, b1) -&gt; {\r\n<br/>    +            return b1.getCode().compareTo(a1.getCode()); // Reverse alphabetic\r\n<br/>            };\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:43:18','2018-12-01 17:43:18','diff-a870f956ab46d1ea20a267b7b7e178aa-20181201174318','https://github.com/kiegroup/optaplanner/commit/e12ab0cc52d233ce908210a415ff0a0112a9a7bb#diff-a870f956ab46d1ea20a267b7b7e178aa','/var/www/QARefactorings/app/webroot/files/diff-a870f956ab46d1ea20a267b7b7e178aa-20181201174318/a.txt','/var/www/QARefactorings/app/webroot/files/diff-a870f956ab46d1ea20a267b7b7e178aa-20181201174318/b.txt','L403','R403','S'),(952,1,1,5,'<p>\r\n<br/>            TestdataSetBasedSolution original = new TestdataSetBasedSolution(\"solution\");\r\n<br/>    -        Comparator&lt;TestdataValue&gt; valueComparator = new Comparator&lt;TestdataValue&gt;() {\r\n<br/>    -            @Override\r\n<br/>    -            public int compare(TestdataValue a, TestdataValue b) {\r\n<br/>    -                return b.getCode().compareTo(a.getCode()); // Reverse alphabetic\r\n<br/>    -            }\r\n<br/>    -        };\r\n<br/>    -        Set&lt;TestdataValue&gt; valueSet = new TreeSet&lt;&gt;(valueComparator);\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>            TestdataSetBasedSolution original = new TestdataSetBasedSolution(\"solution\");\r\n<br/>    +        Set&lt;TestdataValue&gt; valueSet = new TreeSet&lt;&gt;((a1, b1) -&gt; {\r\n<br/>    +            return b1.getCode().compareTo(a1.getCode()); // Reverse alphabetic\r\n<br/>    +        });\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:43:20','2018-12-01 17:43:20','diff-a870f956ab46d1ea20a267b7b7e178aa-20181201174320','https://github.com/kiegroup/optaplanner/commit/e12ab0cc52d233ce908210a415ff0a0112a9a7bb#diff-a870f956ab46d1ea20a267b7b7e178aa','/var/www/QARefactorings/app/webroot/files/diff-a870f956ab46d1ea20a267b7b7e178aa-20181201174320/a.txt','/var/www/QARefactorings/app/webroot/files/diff-a870f956ab46d1ea20a267b7b7e178aa-20181201174320/b.txt','L394','R398','S'),(953,1,1,5,'<p>\r\n<br/>        public static SingletonInverseVariableSupply mockSingletonInverseVariableSupply(\r\n<br/>                final TestdataChainedEntity[] allEntities) {\r\n<br/>    -        return new SingletonInverseVariableSupply() {\r\n<br/>    -            @Override\r\n<br/>    -            public Object getInverseSingleton(Object planningValue) {\r\n<br/>    -                for (TestdataChainedEntity entity : allEntities) {\r\n<br/>    -                    if (entity.getChainedObject().equals(planningValue)) {\r\n<br/>    -                        return entity;\r\n<br/>    -                    }\r\n<br/>                    }\r\n<br/>    -                return null;\r\n<br/>                }\r\n<br/>            };\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'<p>\r\n<br/>        public static SingletonInverseVariableSupply mockSingletonInverseVariableSupply(\r\n<br/>                final TestdataChainedEntity[] allEntities) {\r\n<br/>    +        return planningValue -&gt; {\r\n<br/>    +            for (TestdataChainedEntity entity : allEntities) {\r\n<br/>    +                if (entity.getChainedObject().equals(planningValue)) {\r\n<br/>    +                    return entity;\r\n<br/>                    }\r\n<br/>                }\r\n<br/>    +            return null;\r\n<br/>            };\r\n<br/>        }\r\n<br/>    <br/></p>',NULL,'2018-12-01 17:43:22','2018-12-01 17:43:22','diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a-20181201174322','https://github.com/kiegroup/optaplanner/commit/e12ab0cc52d233ce908210a415ff0a0112a9a7bb#diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a','/var/www/QARefactorings/app/webroot/files/diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a-20181201174322/a.txt','/var/www/QARefactorings/app/webroot/files/diff-6dbcd7b0eb0e8bfaec46ef6585f8dc6a-20181201174322/b.txt','L235','R192','S');
/*!40000 ALTER TABLE `transformations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_languages`
--

DROP TABLE IF EXISTS `user_languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_languages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `language_id` tinyint(4) NOT NULL,
  `experience` tinyint(2) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_users_has_languages_languages1_idx` (`language_id`),
  KEY `fk_users_has_languages_users1_idx` (`user_id`),
  CONSTRAINT `fk_users_has_languages_languages1` FOREIGN KEY (`language_id`) REFERENCES `languages` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_languages_users1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_languages`
--

LOCK TABLES `user_languages` WRITE;
/*!40000 ALTER TABLE `user_languages` DISABLE KEYS */;
INSERT INTO `user_languages` VALUES (8,2,1,2,'2018-11-29 17:36:37','2018-11-29 17:36:37');
/*!40000 ALTER TABLE `user_languages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_types` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `description` varchar(25) NOT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_types`
--

LOCK TABLES `user_types` WRITE;
/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` VALUES (1,'candidato','2018-01-30 21:28:00'),(2,'pesquisador','2018-01-30 21:28:00'),(3,'administrador','2018-01-30 21:28:00');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_type_id` tinyint(4) NOT NULL,
  `username` varchar(60) NOT NULL,
  `password` varchar(120) NOT NULL,
  `name` varchar(100) NOT NULL,
  `sex` varchar(20) NOT NULL,
  `status` char(1) NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  `trophy` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `formation` varchar(100) NOT NULL,
  `profession` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`),
  KEY `FK` (`user_type_id`),
  CONSTRAINT `fk_users_user_types` FOREIGN KEY (`user_type_id`) REFERENCES `user_types` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (2,3,'waltimlmm','1b8718b4bcca35caec81818db8598c84fa03aafd','Walter Lucas','Masculino','1','waltimlmm@gmail.com',0,'2018-01-30 21:37:26','2018-11-29 17:36:37','MM','DJ'),(3,1,'jose','f59f2822bb2354b93ab71a6d93104c1137f76210','jose','Masculino','1','jose@jose.com',0,'2018-03-07 17:42:33','2018-11-27 20:21:02','',''),(4,3,'rbonifacio123','26b25a5963b9b7c4180507ba5d7c308b856f9d34','rbonifacio','Masculino','1','rbonifacio123@gmail.com',0,'2018-11-26 14:46:48','2018-11-26 15:10:30','DC',''),(5,1,'thiagohd93','303438fec1c1a0a4400324a5ef3d6f3bc5b1c05d','Thiago Dias','Masculino','1','thiagohd93@gmail.com',0,'2018-11-26 21:02:29','2018-11-26 21:03:40','SC','');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-12-01 20:42:33
